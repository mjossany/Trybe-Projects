{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/drinkProcess/DrinkProcess.js\";\nimport React, { useEffect, useState } from 'react';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { useDispatch } from 'react-redux';\nimport { actionRequestItems } from '../../actions';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { ingredientsMeasuresFunc } from './utils';\n\nconst DrinkProcess = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const dispatch = useDispatch();\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    instructions: '',\n    ingredients: []\n  });\n  useEffect(() => {\n    const fetchItem = async () => {\n      dispatch(actionRequestItems());\n\n      try {\n        const response = await fetchApi(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        console.log(response);\n        const {\n          strDrink,\n          strCategory,\n          strMealThumb,\n          strInstructions\n        } = response.meals[0];\n        setItensInfo({\n          image: strMealThumb,\n          title: strMeal,\n          category: strCategory,\n          instructions: strInstructions,\n          ingredients: ingredientsMeasuresFunc(response)\n        });\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n      }\n    };\n\n    fetchItem();\n  }, [dispatch, id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderDetails, {\n    image: itensInfo.image,\n    title: itensInfo.title,\n    category: itensInfo.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, itensInfo.ingredients.map((ing, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: ing,\n      \"data-testid\": `data-testid=${index}-ingredient-step`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, ing);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, itensInfo.instructions)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"finish-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Finalizar Receita\")));\n};\n\nexport default DrinkProcess;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/drinkProcess/DrinkProcess.js"],"names":["React","useEffect","useState","HeaderDetails","useDispatch","actionRequestItems","fetchApi","ingredientsMeasuresFunc","DrinkProcess","match","params","id","dispatch","itensInfo","setItensInfo","image","title","category","instructions","ingredients","fetchItem","response","console","log","strDrink","strCategory","strMealThumb","strInstructions","meals","strMeal","error","map","ing","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { useDispatch } from 'react-redux';\nimport { actionRequestItems } from '../../actions';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { ingredientsMeasuresFunc } from './utils';\n\nconst DrinkProcess = ({ match: { params: { id }} }) => {\n  const dispatch = useDispatch();\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    instructions: '',\n    ingredients: [],\n  });\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      dispatch(actionRequestItems());\n      try{\n        const response = await fetchApi(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        console.log(response);\n        const { strDrink, strCategory, strMealThumb, strInstructions  } = response.meals[0];\n        setItensInfo({\n          image: strMealThumb,\n          title: strMeal,\n          category: strCategory,\n          instructions: strInstructions,\n          ingredients: ingredientsMeasuresFunc(response)\n        })\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`)\n      }\n    }\n    fetchItem();\n  }, [dispatch, id])\n\n  return(\n    <div>\n      <div>\n        <HeaderDetails\n          image={ itensInfo.image }\n          title={ itensInfo.title}\n          category={ itensInfo.category }\n        />\n      </div>\n      <div>\n        <h3>Ingredients</h3>\n          <ul>\n            {\n              itensInfo.ingredients.map((ing, index) => {\n                return (\n                  <li\n                    key={ ing }\n                    data-testid={`data-testid=${index}-ingredient-step`}\n                  >\n                    {ing}\n                  </li>\n                )})\n            }\n          </ul>\n        \n      </div>\n      <div>\n        <h3>Instructions</h3>\n        <p\n          data-testid=\"instructions\"\n        >\n          {itensInfo.instructions}\n        </p>\n      </div>\n      <div>\n        <button\n          data-testid=\"finish-recipe-btn\"\n        >\n          Finalizar Receita\n        </button>\n      </div>\n    </div>\n  )\n};\n\nexport default DrinkProcess;\n"]},"metadata":{},"sourceType":"module"}