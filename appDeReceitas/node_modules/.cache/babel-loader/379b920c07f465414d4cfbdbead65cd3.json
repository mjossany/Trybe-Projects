{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/components/ButtonDetails/ButtonDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport './ButtonDetails.css';\n\nconst ButtonDetails = ({\n  id,\n  type\n}) => {\n  const [stateButton, setStateButton] = useState('start-button');\n  const [nameButton, setNameButton] = useState('Começar Receita');\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    const doneRecipe = JSON.parse(localStorage.getItem('doneRecipes'));\n\n    if (doneRecipe) {\n      const findRecipe = doneRecipe.find(done => done.id === id);\n      if (findRecipe) setStateButton('start-button-none');\n    }\n\n    const continueRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (continueRecipe && continueRecipe[type] && continueRecipe[type][id]) setNameButton('Continuar Receita');\n  }, [id, type]);\n\n  const handleClick = () => {\n    setRedirect(true);\n  };\n\n  if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    \"data-testid\": \"start-recipe-btn\",\n    className: stateButton,\n    onClick: handleClick,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, nameButton));\n};\n\nButtonDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default ButtonDetails;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/components/ButtonDetails/ButtonDetails.js"],"names":["React","useEffect","useState","PropTypes","Button","Redirect","ButtonDetails","id","type","stateButton","setStateButton","nameButton","setNameButton","redirect","setRedirect","doneRecipe","JSON","parse","localStorage","getItem","findRecipe","find","done","continueRecipe","handleClick","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAAkB;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,cAAD,CAA9C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,iBAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAnB;;AACA,QAAIJ,UAAJ,EAAgB;AACd,YAAMK,UAAU,GAAGL,UAAU,CAACM,IAAX,CAAiBC,IAAD,IAAUA,IAAI,CAACf,EAAL,KAAYA,EAAtC,CAAnB;AACA,UAAIa,UAAJ,EAAgBV,cAAc,CAAC,mBAAD,CAAd;AACjB;;AACD,UAAMa,cAAc,GAAGP,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAAvB;AACA,QAAII,cAAc,IACbA,cAAc,CAACf,IAAD,CADf,IAECe,cAAc,CAACf,IAAD,CAAd,CAAqBD,EAArB,CAFL,EAE+BK,aAAa,CAAC,mBAAD,CAAb;AAChC,GAVQ,EAUN,CAACL,EAAD,EAAKC,IAAL,CAVM,CAAT;;AAWA,QAAMgB,WAAW,GAAG,MAAM;AACxBV,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAGA,MAAID,QAAJ,EAAc,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAI,GAAEN,EAAG,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACd,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,mBAAY,kBADd;AAEE,IAAA,SAAS,EAAGE,WAFd;AAGE,IAAA,OAAO,EAAGe,WAHZ;AAIE,IAAA,OAAO,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGb,UANH,CADF,CADF;AAYD,CA/BD;;AAiCAL,aAAa,CAACmB,SAAd,GAA0B;AACxBlB,EAAAA,EAAE,EAAEJ,SAAS,CAACuB,MAAV,CAAiBC,UADG;AAExBnB,EAAAA,IAAI,EAAEL,SAAS,CAACuB,MAAV,CAAiBC;AAFC,CAA1B;AAKA,eAAerB,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport './ButtonDetails.css';\n\nconst ButtonDetails = ({ id, type }) => {\n  const [stateButton, setStateButton] = useState('start-button');\n  const [nameButton, setNameButton] = useState('Começar Receita');\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    const doneRecipe = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (doneRecipe) {\n      const findRecipe = doneRecipe.find((done) => done.id === id);\n      if (findRecipe) setStateButton('start-button-none');\n    }\n    const continueRecipe = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (continueRecipe\n      && continueRecipe[type]\n      && continueRecipe[type][id]) setNameButton('Continuar Receita');\n  }, [id, type]);\n  const handleClick = () => {\n    setRedirect(true);\n  };\n  if (redirect) return <Redirect to={ `${id}/in-progress` } />;\n  return (\n    <div className=\"button-container\">\n      <Button\n        data-testid=\"start-recipe-btn\"\n        className={ stateButton }\n        onClick={ handleClick }\n        variant=\"success\"\n      >\n        {nameButton}\n      </Button>\n    </div>\n  );\n};\n\nButtonDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default ButtonDetails;\n"]},"metadata":{},"sourceType":"module"}