{"ast":null,"code":"export const validateEmailPassword = (email, password) => {\n  const re = /\\w+@\\w+.com/.test(email);\n  const minimumPasswordLength = 7;\n  const validPassword = password.length >= minimumPasswordLength;\n  const logicValidation = re && validPassword;\n  return logicValidation;\n};\nexport const saveLoginInfoLocalStorage = userEmail => {\n  const user = {\n    email: userEmail\n  };\n  localStorage.setItem('user', JSON.stringify(user));\n  localStorage.setItem('mealsToken', 1);\n  localStorage.setItem('cocktailsToken', 1);\n};\nexport const filterIngredientsDetails = recipe => {\n  const ingredientsMeaseure = [];\n  const ingredients = Object.entries(recipe).filter(value => value[0].includes('strIngredient') && value[1]);\n  const measures = Object.entries(recipe).filter(value => value[0].includes('strMeasure') && value[1]);\n\n  for (let index = 0; index < ingredients.length; index += 1) {\n    ingredientsMeaseure.push([ingredients[index][1], measures[index][1]]);\n  }\n\n  return ingredientsMeaseure;\n};\nexport const FoodAndDrinksInProcessLocalStorage = (checkedIngredients, id) => {\n  const mealsInProgress = {\n    meals: {\n      [id]: [...checkedIngredients]\n    }\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(mealsInProgress));\n};","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/functions/index.js"],"names":["validateEmailPassword","email","password","re","test","minimumPasswordLength","validPassword","length","logicValidation","saveLoginInfoLocalStorage","userEmail","user","localStorage","setItem","JSON","stringify","filterIngredientsDetails","recipe","ingredientsMeaseure","ingredients","Object","entries","filter","value","includes","measures","index","push","FoodAndDrinksInProcessLocalStorage","checkedIngredients","id","mealsInProgress","meals"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxD,QAAMC,EAAE,GAAG,cAAcC,IAAd,CAAmBH,KAAnB,CAAX;AACA,QAAMI,qBAAqB,GAAG,CAA9B;AACA,QAAMC,aAAa,GAAGJ,QAAQ,CAACK,MAAT,IAAmBF,qBAAzC;AACA,QAAMG,eAAe,GAAGL,EAAE,IAAIG,aAA9B;AACA,SAAOE,eAAP;AACD,CANM;AAQP,OAAO,MAAMC,yBAAyB,GAAIC,SAAD,IAAe;AACtD,QAAMC,IAAI,GAAG;AACXV,IAAAA,KAAK,EAAES;AADI,GAAb;AAGAE,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA7B;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,CAAnC;AACAD,EAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuC,CAAvC;AACD,CAPM;AASP,OAAO,MAAMG,wBAAwB,GAAIC,MAAD,IAAY;AAClD,QAAMC,mBAAmB,GAAG,EAA5B;AACA,QAAMC,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAeJ,MAAf,EACjBK,MADiB,CACTC,KAAD,IAAWA,KAAK,CAAC,CAAD,CAAL,CAASC,QAAT,CAAkB,eAAlB,KAAsCD,KAAK,CAAC,CAAD,CAD5C,CAApB;AAEA,QAAME,QAAQ,GAAGL,MAAM,CAACC,OAAP,CAAeJ,MAAf,EACdK,MADc,CACNC,KAAD,IAAWA,KAAK,CAAC,CAAD,CAAL,CAASC,QAAT,CAAkB,YAAlB,KAAmCD,KAAK,CAAC,CAAD,CAD5C,CAAjB;;AAEA,OAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,WAAW,CAACZ,MAAxC,EAAgDmB,KAAK,IAAI,CAAzD,EAA4D;AAC1DR,IAAAA,mBAAmB,CAACS,IAApB,CAAyB,CAACR,WAAW,CAACO,KAAD,CAAX,CAAmB,CAAnB,CAAD,EAAwBD,QAAQ,CAACC,KAAD,CAAR,CAAgB,CAAhB,CAAxB,CAAzB;AACD;;AACD,SAAOR,mBAAP;AACD,CAVM;AAYP,OAAO,MAAMU,kCAAkC,GAAG,CAACC,kBAAD,EAAqBC,EAArB,KAA4B;AAC5E,QAAMC,eAAe,GAAG;AACtBC,IAAAA,KAAK,EAAE;AACL,OAACF,EAAD,GAAM,CAAC,GAAGD,kBAAJ;AADD;AADe,GAAxB;AAMAjB,EAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAegB,eAAf,CAA1C;AACD,CARM","sourcesContent":["export const validateEmailPassword = (email, password) => {\n  const re = /\\w+@\\w+.com/.test(email);\n  const minimumPasswordLength = 7;\n  const validPassword = password.length >= minimumPasswordLength;\n  const logicValidation = re && validPassword;\n  return logicValidation;\n};\n\nexport const saveLoginInfoLocalStorage = (userEmail) => {\n  const user = {\n    email: userEmail,\n  };\n  localStorage.setItem('user', JSON.stringify(user));\n  localStorage.setItem('mealsToken', 1);\n  localStorage.setItem('cocktailsToken', 1);\n};\n\nexport const filterIngredientsDetails = (recipe) => {\n  const ingredientsMeaseure = [];\n  const ingredients = Object.entries(recipe)\n    .filter((value) => value[0].includes('strIngredient') && value[1]);\n  const measures = Object.entries(recipe)\n    .filter((value) => value[0].includes('strMeasure') && value[1]);\n  for (let index = 0; index < ingredients.length; index += 1) {\n    ingredientsMeaseure.push([ingredients[index][1], measures[index][1]]);\n  }\n  return ingredientsMeaseure;\n};\n\nexport const FoodAndDrinksInProcessLocalStorage = (checkedIngredients, id) => {\n  const mealsInProgress = {\n    meals: {\n      [id]: [...checkedIngredients],\n    },\n  };\n\n  localStorage.setItem('inProgressRecipes', JSON.stringify(mealsInProgress));\n};\n"]},"metadata":{},"sourceType":"module"}