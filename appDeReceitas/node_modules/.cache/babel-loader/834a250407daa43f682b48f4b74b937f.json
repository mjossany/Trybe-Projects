{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/drinkDetails/DrinkDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from 'react-bootstrap';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport IngredientsDetails from '../../components/IngredientsDetails/IngredientsDetails';\nimport Instructions from '../../components/InstructionsDetails/InstructionsDetails';\nimport Recomendation from '../../components/Recomentation/Recomendation';\nimport ButtonDetails from '../../components/ButtonDetails/ButtonDetails';\n\nconst DrinkDetails = ({\n  match: {\n    params: id\n  }\n}) => {\n  const [drink, setDrink] = useState(0);\n  const [recomendation, setRecomendation] = useState(0);\n  useEffect(() => {\n    const fetchRemomendation = () => {\n      fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=').then(resolve => resolve.json()).then(resolve => setRecomendation(resolve.meals));\n    };\n\n    fetchRemomendation();\n  }, []);\n  useEffect(() => {\n    const fetchDrink = () => {\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id.id}`).then(resolve => resolve.json()).then(resolve => setDrink(resolve.drinks[0]));\n    };\n\n    fetchDrink();\n  }, [id.id]);\n  if (!drink) return /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }\n  });\n  const {\n    strDrink,\n    strDrinkThumb,\n    strAlcoholic,\n    strInstructions\n  } = drink;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderDetails, {\n    title: strDrink,\n    image: strDrinkThumb,\n    category: strAlcoholic,\n    recipe: drink,\n    id: id.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IngredientsDetails, {\n    recipe: drink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Instructions, {\n    instruction: strInstructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Recomendation, {\n    list: recomendation,\n    type: \"Meal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ButtonDetails, {\n    id: id.id,\n    type: \"cocktails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nDrinkDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default DrinkDetails;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/drinkDetails/DrinkDetails.js"],"names":["React","useEffect","useState","PropTypes","Spinner","HeaderDetails","IngredientsDetails","Instructions","Recomendation","ButtonDetails","DrinkDetails","match","params","id","drink","setDrink","recomendation","setRecomendation","fetchRemomendation","fetch","then","resolve","json","meals","fetchDrink","drinks","strDrink","strDrinkThumb","strAlcoholic","strInstructions","propTypes","shape","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from 'react-bootstrap';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport IngredientsDetails from '../../components/IngredientsDetails/IngredientsDetails';\nimport Instructions from '../../components/InstructionsDetails/InstructionsDetails';\nimport Recomendation from '../../components/Recomentation/Recomendation';\nimport ButtonDetails from '../../components/ButtonDetails/ButtonDetails';\n\nconst DrinkDetails = ({ match: { params: id } }) => {\n  const [drink, setDrink] = useState(0);\n  const [recomendation, setRecomendation] = useState(0);\n  useEffect(() => {\n    const fetchRemomendation = () => {\n      fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n        .then((resolve) => resolve.json())\n        .then((resolve) => setRecomendation(resolve.meals));\n    };\n    fetchRemomendation();\n  }, []);\n  useEffect(() => {\n    const fetchDrink = () => {\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id.id}`)\n        .then((resolve) => resolve.json())\n        .then((resolve) => setDrink(resolve.drinks[0]));\n    };\n    fetchDrink();\n  }, [id.id]);\n  if (!drink) return <Spinner animation=\"border\" />;\n  const { strDrink, strDrinkThumb, strAlcoholic, strInstructions } = drink;\n  return (\n    <div>\n      <HeaderDetails\n        title={ strDrink }\n        image={ strDrinkThumb }\n        category={ strAlcoholic }\n        recipe={ drink }\n        id={ id.id }\n      />\n      <IngredientsDetails recipe={ drink } />\n      <Instructions instruction={ strInstructions } />\n      <Recomendation list={ recomendation } type=\"Meal\" />\n      <ButtonDetails id={ id.id } type=\"cocktails\" />\n    </div>\n  );\n};\n\nDrinkDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default DrinkDetails;\n"]},"metadata":{},"sourceType":"module"}