{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/foodProcess/FoodProcess.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { actionStoreInProcess } from '../../actions';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { ingredientsMeasuresFunc, updateLocalStorage } from './utils';\nimport { foodAndDrinksInProcessLocalStorage } from '../../functions';\n\nconst FoodProcess = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const dispatch = useDispatch();\n  const {\n    meals\n  } = useSelector(state => state.inProcessReducer);\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    instructions: ''\n  });\n  const [checkedIngredients, setCheckedIngredients] = useState([]);\n  useEffect(() => {\n    const fetchItem = async () => {\n      try {\n        const response = await fetchApi(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const {\n          strMeal,\n          strCategory,\n          strMealThumb,\n          strInstructions\n        } = response.meals[0];\n        setItensInfo({\n          image: strMealThumb,\n          title: strMeal,\n          category: strCategory,\n          instructions: strInstructions\n        });\n        const ingredients = ingredientsMeasuresFunc(response);\n        dispatch(actionStoreInProcess({\n          id,\n          ingredients: [...ingredients]\n        }));\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n      }\n    };\n\n    fetchItem();\n\n    if (!localStorage.getItem('inProgressRecipes')) {\n      foodAndDrinksInProcessLocalStorage();\n    } else {\n      const getLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      setCheckedIngredients(getLocalStorage.meals[id] || []);\n    }\n  }, [dispatch, id]);\n\n  const handleClick = ing => {\n    if (checkedIngredients.some(ingredient => ingredient === ing)) {\n      const filteredIngredients = checkedIngredients.filter(ingredient => ingredient !== ing);\n      setCheckedIngredients(filteredIngredients);\n    } else {\n      setCheckedIngredients([...checkedIngredients, ing]);\n    }\n\n    updateLocalStorage(id, ing, checkedIngredients);\n  };\n\n  if (meals[id] === undefined) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 39\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderDetails, {\n    image: itensInfo.image,\n    title: itensInfo.title,\n    category: itensInfo.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Ingredients\"), meals[id].map((ing, index) => {\n    const key = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    let checked;\n\n    if (key.meals[id] !== undefined) {\n      checked = key.meals[id].some(ingredient => ingredient === ing);\n    } else {\n      checked = false;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: ing,\n      \"data-testid\": `data-testid=${index}-ingredient-step`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: () => handleClick(ing),\n      defaultChecked: checked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), ing);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, itensInfo.instructions)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Finalizar Receita\")));\n};\n\nFoodProcess.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default FoodProcess;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/foodProcess/FoodProcess.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","HeaderDetails","actionStoreInProcess","fetchApi","ingredientsMeasuresFunc","updateLocalStorage","foodAndDrinksInProcessLocalStorage","FoodProcess","match","params","id","dispatch","meals","state","inProcessReducer","itensInfo","setItensInfo","image","title","category","instructions","checkedIngredients","setCheckedIngredients","fetchItem","response","strMeal","strCategory","strMealThumb","strInstructions","ingredients","error","console","log","localStorage","getItem","getLocalStorage","JSON","parse","handleClick","ing","some","ingredient","filteredIngredients","filter","undefined","map","index","key","checked","propTypes","shape","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { actionStoreInProcess } from '../../actions';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { ingredientsMeasuresFunc, updateLocalStorage } from './utils';\nimport { foodAndDrinksInProcessLocalStorage } from '../../functions';\n\nconst FoodProcess = ({ match: { params: { id } } }) => {\n  const dispatch = useDispatch();\n  const { meals } = useSelector((state) => state.inProcessReducer);\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    instructions: '',\n  });\n\n  const [\n    checkedIngredients,\n    setCheckedIngredients,\n  ] = useState([]);\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      try {\n        const response = await fetchApi(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const { strMeal, strCategory, strMealThumb, strInstructions } = response.meals[0];\n        setItensInfo({\n          image: strMealThumb,\n          title: strMeal,\n          category: strCategory,\n          instructions: strInstructions,\n        });\n        const ingredients = ingredientsMeasuresFunc(response);\n        dispatch(actionStoreInProcess({\n          id,\n          ingredients: [...ingredients],\n        }));\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n      }\n    };\n    fetchItem();\n    if (!localStorage.getItem('inProgressRecipes')) {\n      foodAndDrinksInProcessLocalStorage();\n    } else {\n      const getLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      setCheckedIngredients(getLocalStorage.meals[id] || []);\n    }\n  }, [dispatch, id]);\n\n  const handleClick = (ing) => {\n    if (checkedIngredients.some((ingredient) => ingredient === ing)) {\n      const filteredIngredients = checkedIngredients.filter((ingredient) => (\n        ingredient !== ing));\n      setCheckedIngredients(filteredIngredients);\n    } else {\n      setCheckedIngredients([...checkedIngredients, ing]);\n    }\n    updateLocalStorage(id, ing, checkedIngredients);\n  };\n\n  if (meals[id] === undefined) return <h2>Loading...</h2>;\n  return (\n    <div>\n      <div>\n        <HeaderDetails\n          image={ itensInfo.image }\n          title={ itensInfo.title }\n          category={ itensInfo.category }\n        />\n      </div>\n      <div>\n        <h3>Ingredients</h3>\n        {\n          meals[id].map((ing, index) => {\n            const key = JSON.parse(localStorage.getItem('inProgressRecipes'));\n            let checked;\n            if (key.meals[id] !== undefined) {\n              checked = key.meals[id].some((ingredient) => ingredient === ing);\n            } else {\n              checked = false;\n            }\n            return (\n              <div\n                key={ ing }\n                data-testid={ `data-testid=${index}-ingredient-step` }\n              >\n                <input\n                  type=\"checkbox\"\n                  onClick={ () => handleClick(ing) }\n                  defaultChecked={ checked }\n                />\n                <label>\n                  \n                </label>\n                {ing}\n              </div>\n            );\n          })\n        }\n      </div>\n      <div>\n        <h3>Instructions</h3>\n        <p\n          data-testid=\"instructions\"\n        >\n          {itensInfo.instructions}\n        </p>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n        >\n          Finalizar Receita\n        </button>\n      </div>\n    </div>\n  );\n};\n\nFoodProcess.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default FoodProcess;\n"]},"metadata":{},"sourceType":"module"}