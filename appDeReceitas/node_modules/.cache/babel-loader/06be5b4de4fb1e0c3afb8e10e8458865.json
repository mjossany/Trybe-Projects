{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/drinkProcess/DrinkProcess.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { actionStoreInProcessCocktail } from '../../actions';\nimport { foodAndDrinksInProcessLocalStorage, updateLocalStorage, ingredientsMeasuresFunc, defineChecked } from '../../functions';\nimport RecipeFinishBtn from '../foodProcess/RecipeFinishBtn';\n\nconst DrinkProcess = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const type = 'cocktails';\n  const dispatch = useDispatch();\n  const {\n    cocktails\n  } = useSelector(state => state.inProcessReducer);\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    recipe: {},\n    instructions: ''\n  });\n  const [checkedIngredients, setCheckedIngredients] = useState([]);\n  useEffect(() => {\n    const fetchItem = async () => {\n      try {\n        const response = await fetchApi(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const {\n          strDrink,\n          strCategory,\n          strDrinkThumb,\n          strInstructions\n        } = response.drinks[0];\n        setItensInfo({\n          image: strDrinkThumb,\n          title: strDrink,\n          category: strCategory,\n          recipe: response.drinks[0],\n          instructions: strInstructions\n        });\n        const ingredients = ingredientsMeasuresFunc(response);\n        dispatch(actionStoreInProcessCocktail({\n          id,\n          ingredients: [...ingredients]\n        }));\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n      }\n    };\n\n    fetchItem();\n\n    if (!localStorage.getItem('inProgressRecipes')) {\n      foodAndDrinksInProcessLocalStorage();\n    } else {\n      const getLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      setCheckedIngredients(getLocalStorage.meals[id] || []);\n    }\n  }, [dispatch, id]);\n\n  const handleClick = ing => {\n    if (checkedIngredients.some(ingredient => ingredient === ing)) {\n      const filteredIngredients = checkedIngredients.filter(ingredient => ingredient !== ing);\n      setCheckedIngredients(filteredIngredients);\n    } else {\n      setCheckedIngredients([...checkedIngredients, ing]);\n    }\n\n    updateLocalStorage(id, ing, checkedIngredients, type);\n  };\n\n  if (cocktails[id] === undefined) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 43\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe-process-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderDetails, {\n    image: itensInfo.image,\n    title: itensInfo.title,\n    category: itensInfo.category,\n    recipe: itensInfo.recipe,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cocktails-recipe-ingredients-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cocktails-recipe-ingredients-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Ingredients\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cocktails-recipe-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, cocktails[id].map((ing, index) => {\n    const checked = defineChecked(ing, id, type);\n    const style = checked ? 'inputChecked' : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: ing,\n      \"data-testid\": `${index}-ingredient-step`,\n      className: \"label-checkbox-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkbox-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: ing,\n      type: \"checkbox\",\n      onClick: () => handleClick(ing),\n      defaultChecked: checked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: ing,\n      className: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, ing)));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, itensInfo.instructions)), /*#__PURE__*/React.createElement(RecipeFinishBtn, {\n    id: id,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })));\n};\n\nDrinkProcess.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default DrinkProcess;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/drinkProcess/DrinkProcess.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","HeaderDetails","fetchApi","actionStoreInProcessCocktail","foodAndDrinksInProcessLocalStorage","updateLocalStorage","ingredientsMeasuresFunc","defineChecked","RecipeFinishBtn","DrinkProcess","match","params","id","type","dispatch","cocktails","state","inProcessReducer","itensInfo","setItensInfo","image","title","category","recipe","instructions","checkedIngredients","setCheckedIngredients","fetchItem","response","strDrink","strCategory","strDrinkThumb","strInstructions","drinks","ingredients","error","console","log","localStorage","getItem","getLocalStorage","JSON","parse","meals","handleClick","ing","some","ingredient","filteredIngredients","filter","undefined","map","index","checked","style","propTypes","shape","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { actionStoreInProcessCocktail } from '../../actions';\nimport {\n  foodAndDrinksInProcessLocalStorage,\n  updateLocalStorage,\n  ingredientsMeasuresFunc,\n  defineChecked,\n} from '../../functions';\nimport RecipeFinishBtn from '../foodProcess/RecipeFinishBtn';\n\nconst DrinkProcess = ({ match: { params: { id } } }) => {\n  const type = 'cocktails';\n  const dispatch = useDispatch();\n  const { cocktails } = useSelector((state) => state.inProcessReducer);\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    recipe: {},\n    instructions: '',\n  });\n\n  const [\n    checkedIngredients,\n    setCheckedIngredients,\n  ] = useState([]);\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      try {\n        const response = await fetchApi(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const {\n          strDrink,\n          strCategory,\n          strDrinkThumb,\n          strInstructions,\n        } = response.drinks[0];\n        setItensInfo({\n          image: strDrinkThumb,\n          title: strDrink,\n          category: strCategory,\n          recipe: response.drinks[0],\n          instructions: strInstructions,\n        });\n        const ingredients = ingredientsMeasuresFunc(response);\n        dispatch(actionStoreInProcessCocktail({\n          id,\n          ingredients: [...ingredients],\n        }));\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n      }\n    };\n    fetchItem();\n    if (!localStorage.getItem('inProgressRecipes')) {\n      foodAndDrinksInProcessLocalStorage();\n    } else {\n      const getLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      setCheckedIngredients(getLocalStorage.meals[id] || []);\n    }\n  }, [dispatch, id]);\n\n  const handleClick = (ing) => {\n    if (checkedIngredients.some((ingredient) => ingredient === ing)) {\n      const filteredIngredients = checkedIngredients.filter((ingredient) => (\n        ingredient !== ing));\n      setCheckedIngredients(filteredIngredients);\n    } else {\n      setCheckedIngredients([...checkedIngredients, ing]);\n    }\n    updateLocalStorage(id, ing, checkedIngredients, type);\n  };\n\n  if (cocktails[id] === undefined) return <h2>Loading...</h2>;\n  return (\n    <div className=\"recipe-process-body\">\n      <div>\n        <HeaderDetails\n          image={ itensInfo.image }\n          title={ itensInfo.title }\n          category={ itensInfo.category }\n          recipe={ itensInfo.recipe }\n          id={ id }\n        />\n      </div>\n      <div className=\"cocktails-recipe-ingredients-box\">\n        <div className=\"cocktails-recipe-ingredients-title\">\n          <h3>Ingredients</h3>\n        </div>\n        <div className=\"cocktails-recipe-ingredients\">\n          {\n            cocktails[id].map((ing, index) => {\n              const checked = defineChecked(ing, id, type);\n              const style = checked ? 'inputChecked' : '';\n              return (\n                <div\n                  key={ ing }\n                  data-testid={ `${index}-ingredient-step` }\n                  className=\"label-checkbox-box\"\n                >\n                  <div className=\"checkbox-box\">\n                    <input\n                      id={ ing }\n                      type=\"checkbox\"\n                      onClick={ () => handleClick(ing) }\n                      defaultChecked={ checked }\n                    />\n                  </div>\n                  <div className=\"label-box\">\n                    <label\n                      htmlFor={ ing }\n                      className={ style }\n                    >\n                      {ing}\n                    </label>\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n      <div>\n        <div>\n          <h3>Instructions</h3>\n          <p\n            data-testid=\"instructions\"\n          >\n            {itensInfo.instructions}\n          </p>\n        </div>\n        <RecipeFinishBtn\n          id={ id }\n          type={ type }\n        />\n      </div>\n    </div>\n  );\n};\n\nDrinkProcess.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default DrinkProcess;\n"]},"metadata":{},"sourceType":"module"}