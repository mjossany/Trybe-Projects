{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/foodDetails/FoodDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from 'react-bootstrap';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport IngredientsDetails from '../../components/IngredientsDetails/IngredientsDetails';\nimport Instructions from '../../components/InstructionsDetails/InstructionsDetails';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport Recomendation from '../../components/Recomentation/Recomendation';\nimport './FoodDetails.css';\nimport ButtonDetails from '../../components/ButtonDetails/ButtonDetails';\n\nconst FoodDetails = ({\n  match: {\n    params: id\n  }\n}) => {\n  const [meal, setMeal] = useState(0);\n  const [recomendation, setRecomendation] = useState(0);\n  useEffect(() => {\n    const fetchRemomendation = () => {\n      fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=').then(resolve => resolve.json()).then(resolve => setRecomendation(resolve.drinks));\n    };\n\n    fetchRemomendation();\n  }, []);\n  useEffect(() => {\n    const fecthDetails = () => {\n      fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id.id}`).then(response => response.json()).then(response => setMeal(response.meals[0]));\n    };\n\n    fecthDetails();\n  }, [id.id]);\n  if (!meal) return /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  });\n  const {\n    strMeal,\n    strMealThumb,\n    strCategory,\n    strInstructions,\n    strYoutube\n  } = meal;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderDetails, {\n    title: strMeal,\n    image: strMealThumb,\n    category: strCategory,\n    recipe: meal,\n    id: id.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IngredientsDetails, {\n    recipe: meal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Instructions, {\n    instruction: strInstructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VideoDetails, {\n    linkVideo: strYoutube,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Recomendation, {\n    list: recomendation,\n    type: \"Drink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ButtonDetails, {\n    id: id.id,\n    type: \"meals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default FoodDetails;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/foodDetails/FoodDetails.js"],"names":["React","useEffect","useState","PropTypes","Spinner","HeaderDetails","IngredientsDetails","Instructions","VideoDetails","Recomendation","ButtonDetails","FoodDetails","match","params","id","meal","setMeal","recomendation","setRecomendation","fetchRemomendation","fetch","then","resolve","json","drinks","fecthDetails","response","meals","strMeal","strMealThumb","strCategory","strInstructions","strYoutube","propTypes","shape","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from 'react-bootstrap';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport IngredientsDetails from '../../components/IngredientsDetails/IngredientsDetails';\nimport Instructions from '../../components/InstructionsDetails/InstructionsDetails';\nimport VideoDetails from '../../components/VideoDetails/VideoDetails';\nimport Recomendation from '../../components/Recomentation/Recomendation';\nimport './FoodDetails.css';\nimport ButtonDetails from '../../components/ButtonDetails/ButtonDetails';\n\nconst FoodDetails = ({ match: { params: id } }) => {\n  const [meal, setMeal] = useState(0);\n  const [recomendation, setRecomendation] = useState(0);\n  useEffect(() => {\n    const fetchRemomendation = () => {\n      fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n        .then((resolve) => resolve.json())\n        .then((resolve) => setRecomendation(resolve.drinks));\n    };\n    fetchRemomendation();\n  }, []);\n  useEffect(() => {\n    const fecthDetails = () => {\n      fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id.id}`)\n        .then((response) => response.json())\n        .then((response) => setMeal(response.meals[0]));\n    };\n    fecthDetails();\n  }, [id.id]);\n  if (!meal) return <Spinner animation=\"border\" />;\n  const { strMeal, strMealThumb, strCategory, strInstructions, strYoutube } = meal;\n  return (\n    <div className=\"page-container\">\n      <HeaderDetails\n        title={ strMeal }\n        image={ strMealThumb }\n        category={ strCategory }\n        recipe={ meal }\n        id={ id.id }\n      />\n      <IngredientsDetails recipe={ meal } />\n      <Instructions instruction={ strInstructions } />\n      <VideoDetails linkVideo={ strYoutube } />\n      <Recomendation list={ recomendation } type=\"Drink\" />\n      <ButtonDetails id={ id.id } type=\"meals\" />\n    </div>\n  );\n};\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default FoodDetails;\n"]},"metadata":{},"sourceType":"module"}