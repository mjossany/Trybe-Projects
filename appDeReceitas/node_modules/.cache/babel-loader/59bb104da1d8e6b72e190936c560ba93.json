{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/foodProcess/FoodProcess.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { actionRequestItems } from '../../actions';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { ingredientsMeasuresFunc } from './utils';\n\nconst FoodProcess = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const dispatch = useDispatch();\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    instructions: '',\n    ingredients: []\n  });\n  useEffect(() => {\n    const fetchItem = async () => {\n      dispatch(actionRequestItems());\n\n      try {\n        const response = await fetchApi(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const {\n          strMeal,\n          strCategory,\n          strMealThumb,\n          strInstructions\n        } = response.meals[0];\n        setItensInfo({\n          image: strMealThumb,\n          title: strMeal,\n          category: strCategory,\n          instructions: strInstructions,\n          ingredients: ingredientsMeasuresFunc(response)\n        });\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n      }\n    };\n\n    fetchItem();\n  }, [dispatch, id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderDetails, {\n    image: itensInfo.image,\n    title: itensInfo.title,\n    category: itensInfo.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, itensInfo.ingredients.map((ing, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: ing,\n    \"data-testid\": `data-testid=${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\" // onChange={(event) => }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), ing)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, itensInfo.instructions)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Finalizar Receita\")));\n};\n\nFoodProcess.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default FoodProcess;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/foodProcess/FoodProcess.js"],"names":["React","useEffect","useState","useDispatch","PropTypes","HeaderDetails","actionRequestItems","fetchApi","ingredientsMeasuresFunc","FoodProcess","match","params","id","dispatch","itensInfo","setItensInfo","image","title","category","instructions","ingredients","fetchItem","response","strMeal","strCategory","strMealThumb","strInstructions","meals","error","console","log","map","ing","index","propTypes","shape","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { actionRequestItems } from '../../actions';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { ingredientsMeasuresFunc } from './utils';\n\nconst FoodProcess = ({ match: { params: { id } } }) => {\n  const dispatch = useDispatch();\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    instructions: '',\n    ingredients: [],\n  });\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      dispatch(actionRequestItems());\n      try {\n        const response = await fetchApi(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const { strMeal, strCategory, strMealThumb, strInstructions } = response.meals[0];\n        setItensInfo({\n          image: strMealThumb,\n          title: strMeal,\n          category: strCategory,\n          instructions: strInstructions,\n          ingredients: ingredientsMeasuresFunc(response),\n        });\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n      }\n    };\n    fetchItem();\n  }, [dispatch, id]);\n\n  return (\n    <div>\n      <div>\n        <HeaderDetails\n          image={ itensInfo.image }\n          title={ itensInfo.title }\n          category={ itensInfo.category }\n        />\n      </div>\n      <div>\n        <h3>Ingredients</h3>\n        <ul>\n          {\n            itensInfo.ingredients.map((ing, index) => (\n              <li\n                key={ ing }\n                data-testid={ `data-testid=${index}-ingredient-step` }\n              >\n                <input\n                  type=\"checkbox\"\n                  // onChange={(event) => }\n                />\n                {ing}\n              </li>\n            ))\n          }\n        </ul>\n\n      </div>\n      <div>\n        <h3>Instructions</h3>\n        <p\n          data-testid=\"instructions\"\n        >\n          {itensInfo.instructions}\n        </p>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n        >\n          Finalizar Receita\n        </button>\n      </div>\n    </div>\n  );\n};\n\nFoodProcess.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default FoodProcess;\n"]},"metadata":{},"sourceType":"module"}