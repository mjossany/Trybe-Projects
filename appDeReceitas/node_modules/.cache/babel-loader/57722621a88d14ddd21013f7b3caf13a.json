{"ast":null,"code":"export const ingredientsMeasuresFunc = obj => {\n  const objKey = Object.keys(obj);\n  const objEntries = Object.entries(obj[objKey][0]);\n  console.log(obj);\n  const objEntriesIngredient = objEntries.filter(entry => entry[0].includes('strIngredient') && entry[1]).map(entryI => entryI[1]);\n  const objEntriesMeasure = objEntries.filter(entry => entry[0].includes('strMeasure') && entry[1]).map(entryI => entryI[1]);\n  const entriesIngredientArrays = objEntriesIngredient.map((ingredient, index) => `${ingredient} - ${objEntriesMeasure[index]}`);\n  return entriesIngredientArrays;\n};\nexport const saveFoodInProcessLocalStorage = (checkedIngredients, id) => {\n  const meals = {\n    [id]: [...checkedIngredients]\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringfy(meals));\n};","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/foodProcess/utils.js"],"names":["ingredientsMeasuresFunc","obj","objKey","Object","keys","objEntries","entries","console","log","objEntriesIngredient","filter","entry","includes","map","entryI","objEntriesMeasure","entriesIngredientArrays","ingredient","index","saveFoodInProcessLocalStorage","checkedIngredients","id","meals","localStorage","setItem","JSON","stringfy"],"mappings":"AAAA,OAAO,MAAMA,uBAAuB,GAAIC,GAAD,IAAS;AAC9C,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYH,GAAZ,CAAf;AACA,QAAMI,UAAU,GAAGF,MAAM,CAACG,OAAP,CAAeL,GAAG,CAACC,MAAD,CAAH,CAAY,CAAZ,CAAf,CAAnB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AAEA,QAAMQ,oBAAoB,GAAGJ,UAAU,CAACK,MAAX,CAAmBC,KAAD,IAC7CA,KAAK,CAAC,CAAD,CAAL,CAASC,QAAT,CAAkB,eAAlB,KAAsCD,KAAK,CAAC,CAAD,CADhB,EAE1BE,GAF0B,CAErBC,MAAD,IAAYA,MAAM,CAAC,CAAD,CAFI,CAA7B;AAIA,QAAMC,iBAAiB,GAAGV,UAAU,CAACK,MAAX,CAAmBC,KAAD,IAC1CA,KAAK,CAAC,CAAD,CAAL,CAASC,QAAT,CAAkB,YAAlB,KAAmCD,KAAK,CAAC,CAAD,CADhB,EAEvBE,GAFuB,CAElBC,MAAD,IAAYA,MAAM,CAAC,CAAD,CAFC,CAA1B;AAIA,QAAME,uBAAuB,GAAGP,oBAAoB,CAACI,GAArB,CAAyB,CAACI,UAAD,EAAaC,KAAb,KACtD,GAAED,UAAW,MAAKF,iBAAiB,CAACG,KAAD,CAAQ,EADd,CAAhC;AAIA,SAAOF,uBAAP;AACD,CAlBM;AAoBP,OAAO,MAAMG,6BAA6B,GAAG,CAACC,kBAAD,EAAqBC,EAArB,KAA4B;AACvE,QAAMC,KAAK,GAAG;AACZ,KAACD,EAAD,GAAM,CAAC,GAAGD,kBAAJ;AADM,GAAd;AAIAG,EAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,QAAL,CAAcJ,KAAd,CAA1C;AACD,CANM","sourcesContent":["export const ingredientsMeasuresFunc = (obj) => {\n  const objKey = Object.keys(obj);\n  const objEntries = Object.entries(obj[objKey][0]);\n  console.log(obj);\n\n  const objEntriesIngredient = objEntries.filter((entry) => (\n    entry[0].includes('strIngredient') && entry[1]))\n    .map((entryI) => entryI[1]);\n\n  const objEntriesMeasure = objEntries.filter((entry) => (\n    entry[0].includes('strMeasure') && entry[1]))\n    .map((entryI) => entryI[1]);\n\n  const entriesIngredientArrays = objEntriesIngredient.map((ingredient, index) => (\n    `${ingredient} - ${objEntriesMeasure[index]}`\n  ));\n\n  return entriesIngredientArrays;\n};\n\nexport const saveFoodInProcessLocalStorage = (checkedIngredients, id) => {\n  const meals = {\n    [id]: [...checkedIngredients],\n  };\n\n  localStorage.setItem('inProgressRecipes', JSON.stringfy(meals));\n};\n"]},"metadata":{},"sourceType":"module"}