{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/exploreFoodArea/ExploreFoodArea.js\";\nimport React, { useEffect, useState } from 'react';\nimport CardsList from '../../components/CardsList/CardsList';\nimport Header from '../../components/header/Header';\nimport FooterMenu from '../../components/FooterMenu/FooterMenu';\n\nconst ExploreFoodArea = () => {\n  const [areas, setAreas] = useState();\n  const [currentArea, setCurrentArea] = useState();\n  const [filteredFoods, setFilteredFoods] = useState({\n    bool: false,\n    foods: []\n  });\n  useEffect(() => {\n    const getAreas = async () => {\n      const url = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n      const response = await fetch(url);\n      const {\n        meals\n      } = await response.json();\n      setAreas(meals);\n    };\n\n    getAreas();\n    setCurrentArea('American');\n  }, []);\n  useEffect(() => {\n    if (currentArea !== undefined) {\n      const getFoodsByArea = async () => {\n        const url = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${currentArea}`;\n        const response = await fetch(url);\n        const {\n          meals\n        } = await response.json();\n        let mealsArray;\n        const maxCards = 12;\n\n        if (meals.length > maxCards) {\n          mealsArray = meals.slice(0, maxCards);\n        } else {\n          mealsArray = meals;\n        }\n\n        setFilteredFoods({\n          bool: true,\n          foods: mealsArray\n        });\n      };\n\n      getFoodsByArea();\n    }\n  }, [currentArea]);\n\n  const handleChange = ({\n    target: {\n      value\n    }\n  }) => {\n    setCurrentArea(value);\n  };\n\n  if (areas !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Explorar Origem\"), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"explore-by-area-dropdown\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, areas.map(({\n      strArea\n    }) => /*#__PURE__*/React.createElement(\"option\", {\n      key: strArea,\n      \"data-testid\": `${strArea}-option`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, strArea)), /*#__PURE__*/React.createElement(\"option\", {\n      \"data-testid\": \"All-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"All\")), filteredFoods.bool && /*#__PURE__*/React.createElement(CardsList, {\n      array: filteredFoods.foods,\n      teste: \"recipe-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FooterMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return null;\n};\n\nexport default ExploreFoodArea;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/exploreFoodArea/ExploreFoodArea.js"],"names":["React","useEffect","useState","CardsList","Header","FooterMenu","ExploreFoodArea","areas","setAreas","currentArea","setCurrentArea","filteredFoods","setFilteredFoods","bool","foods","getAreas","url","response","fetch","meals","json","undefined","getFoodsByArea","mealsArray","maxCards","length","slice","handleChange","target","value","map","strArea"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CardsList from '../../components/CardsList/CardsList';\nimport Header from '../../components/header/Header';\nimport FooterMenu from '../../components/FooterMenu/FooterMenu';\n\nconst ExploreFoodArea = () => {\n  const [areas, setAreas] = useState();\n  const [currentArea, setCurrentArea] = useState();\n  const [filteredFoods, setFilteredFoods] = useState({\n    bool: false,\n    foods: [],\n  });\n\n  useEffect(() => {\n    const getAreas = async () => {\n      const url = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n      const response = await fetch(url);\n      const { meals } = await response.json();\n      setAreas(meals);\n    };\n    getAreas();\n    setCurrentArea('American');\n  }, []);\n\n  useEffect(() => {\n    if (currentArea !== undefined) {\n      const getFoodsByArea = async () => {\n        const url = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${currentArea}`;\n        const response = await fetch(url);\n        const { meals } = await response.json();\n\n        let mealsArray;\n        const maxCards = 12;\n        if (meals.length > maxCards) {\n          mealsArray = meals.slice(0, maxCards);\n        } else {\n          mealsArray = meals;\n        }\n        setFilteredFoods({\n          bool: true,\n          foods: mealsArray,\n        });\n      };\n      getFoodsByArea();\n    }\n  }, [currentArea]);\n\n  const handleChange = ({ target: { value } }) => {\n    setCurrentArea(value);\n  };\n\n  if (areas !== undefined) {\n    return (\n      <div>\n        <Header>Explorar Origem</Header>\n        <select\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ handleChange }\n        >\n          { areas.map(({ strArea }) => (\n            <option\n              key={ strArea }\n              data-testid={ `${strArea}-option` }\n            >\n              { strArea }\n            </option>\n          )) }\n          <option data-testid=\"All-option\">All</option>\n        </select>\n        { filteredFoods.bool && (\n          <CardsList array={ filteredFoods.foods } teste=\"recipe-card\" />\n        ) }\n        <FooterMenu />\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default ExploreFoodArea;\n"]},"metadata":{},"sourceType":"module"}