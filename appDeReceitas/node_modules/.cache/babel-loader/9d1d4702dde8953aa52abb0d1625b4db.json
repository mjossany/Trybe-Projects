{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/foodProcess/FoodProcess.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { actionRequestItems, actionRequestOk, actionStoreInProcess } from '../../actions';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { ingredientsMeasuresFunc } from './utils';\nimport { foodAndDrinksInProcessLocalStorage } from '../../functions';\n\nconst FoodProcess = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const dispatch = useDispatch();\n  const {\n    isLoading\n  } = useSelector(state => state.itemsReducer);\n  console.log(isLoading);\n  const {\n    meals\n  } = useSelector(state => state.inProcessReducer);\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    instructions: '',\n    ingredients: []\n  });\n  const [checkedIngredients, setCheckedIngredients] = useState([]);\n  useEffect(() => {\n    const fetchItem = async () => {\n      dispatch(actionRequestItems());\n\n      try {\n        const response = await fetchApi(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const {\n          strMeal,\n          strCategory,\n          strMealThumb,\n          strInstructions\n        } = response.meals[0];\n        setItensInfo({\n          image: strMealThumb,\n          title: strMeal,\n          category: strCategory,\n          instructions: strInstructions,\n          ingredients: ingredientsMeasuresFunc(response)\n        });\n        const ingredients = ingredientsMeasuresFunc(response);\n        dispatch(actionStoreInProcess({\n          id,\n          ingredients: [...ingredients]\n        }));\n        dispatch(actionRequestOk());\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n      }\n    };\n\n    fetchItem();\n\n    if (!localStorage.getItem('inProgressRecipes')) {\n      foodAndDrinksInProcessLocalStorage();\n    }\n  }, [dispatch, id]);\n  useEffect(() => {\n    const updateInProgress = () => {\n      const key = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      key.meals[id] = [...checkedIngredients];\n      localStorage.setItem('inProgressRecipes', JSON.stringify(key));\n    };\n\n    updateInProgress();\n  }, [checkedIngredients, id, dispatch]);\n\n  const handleClick = ing => {\n    if (checkedIngredients.some(ingredient => ingredient === ing)) {\n      const filteredIngredients = checkedIngredients.filter(ingredient => ingredient !== ing);\n      setCheckedIngredients(filteredIngredients);\n    } else {\n      setCheckedIngredients([...checkedIngredients, ing]);\n    }\n  };\n\n  if (meals[id].length > 0) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 36\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderDetails, {\n    image: itensInfo.image,\n    title: itensInfo.title,\n    category: itensInfo.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, meals[id].map((ing, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: ing,\n    \"data-testid\": `data-testid=${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: () => handleClick(ing),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), ing)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, itensInfo.instructions)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Finalizar Receita\")));\n};\n\nFoodProcess.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default FoodProcess;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/pages/foodProcess/FoodProcess.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","HeaderDetails","actionRequestItems","actionRequestOk","actionStoreInProcess","fetchApi","ingredientsMeasuresFunc","foodAndDrinksInProcessLocalStorage","FoodProcess","match","params","id","dispatch","isLoading","state","itemsReducer","console","log","meals","inProcessReducer","itensInfo","setItensInfo","image","title","category","instructions","ingredients","checkedIngredients","setCheckedIngredients","fetchItem","response","strMeal","strCategory","strMealThumb","strInstructions","error","localStorage","getItem","updateInProgress","key","JSON","parse","setItem","stringify","handleClick","ing","some","ingredient","filteredIngredients","filter","length","map","index","propTypes","shape","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,SAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,oBAA9C,QAA0E,eAA1E;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,uBAAT,QAAwC,SAAxC;AACA,SAASC,kCAAT,QAAmD,iBAAnD;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV;AAAT,CAAD,KAAmC;AACrD,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAgBd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYnB,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACK,gBAAlB,CAA7B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC;AACzCyB,IAAAA,KAAK,EAAE,EADkC;AAEzCC,IAAAA,KAAK,EAAE,EAFkC;AAGzCC,IAAAA,QAAQ,EAAE,EAH+B;AAIzCC,IAAAA,YAAY,EAAE,EAJ2B;AAKzCC,IAAAA,WAAW,EAAE;AAL4B,GAAD,CAA1C;AAOA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8C/B,QAAQ,CAAC,EAAD,CAA5D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiC,SAAS,GAAG,YAAY;AAC5BjB,MAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;;AACA,UAAI;AACF,cAAM4B,QAAQ,GAAG,MAAMzB,QAAQ,CAAE,wDAAuDM,EAAG,EAA5D,CAA/B;AACA,cAAM;AAAEoB,UAAAA,OAAF;AAAWC,UAAAA,WAAX;AAAwBC,UAAAA,YAAxB;AAAsCC,UAAAA;AAAtC,YAA0DJ,QAAQ,CAACZ,KAAT,CAAe,CAAf,CAAhE;AACAG,QAAAA,YAAY,CAAC;AACXC,UAAAA,KAAK,EAAEW,YADI;AAEXV,UAAAA,KAAK,EAAEQ,OAFI;AAGXP,UAAAA,QAAQ,EAAEQ,WAHC;AAIXP,UAAAA,YAAY,EAAES,eAJH;AAKXR,UAAAA,WAAW,EAAEpB,uBAAuB,CAACwB,QAAD;AALzB,SAAD,CAAZ;AAOA,cAAMJ,WAAW,GAAGpB,uBAAuB,CAACwB,QAAD,CAA3C;AACAlB,QAAAA,QAAQ,CAACR,oBAAoB,CAAC;AAC5BO,UAAAA,EAD4B;AAE5Be,UAAAA,WAAW,EAAE,CAAC,GAAGA,WAAJ;AAFe,SAAD,CAArB,CAAR;AAIAd,QAAAA,QAAQ,CAACT,eAAe,EAAhB,CAAR;AACD,OAhBD,CAgBE,OAAOgC,KAAP,EAAc;AACdnB,QAAAA,OAAO,CAACC,GAAR,CAAa,2CAA0CkB,KAAM,EAA7D;AACD;AACF,KArBD;;AAsBAN,IAAAA,SAAS;;AACT,QAAI,CAACO,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAL,EAAgD;AAC9C9B,MAAAA,kCAAkC;AACnC;AACF,GA3BQ,EA2BN,CAACK,QAAD,EAAWD,EAAX,CA3BM,CAAT;AA6BAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0C,gBAAgB,GAAG,MAAM;AAC7B,YAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAAZ;AACAE,MAAAA,GAAG,CAACrB,KAAJ,CAAUP,EAAV,IAAgB,CAAC,GAAGgB,kBAAJ,CAAhB;AACAS,MAAAA,YAAY,CAACM,OAAb,CAAqB,mBAArB,EAA0CF,IAAI,CAACG,SAAL,CAAeJ,GAAf,CAA1C;AACD,KAJD;;AAKAD,IAAAA,gBAAgB;AACjB,GAPQ,EAON,CAACX,kBAAD,EAAqBhB,EAArB,EAAyBC,QAAzB,CAPM,CAAT;;AASA,QAAMgC,WAAW,GAAIC,GAAD,IAAS;AAC3B,QACElB,kBAAkB,CAACmB,IAAnB,CAAyBC,UAAD,IAAgBA,UAAU,KAAKF,GAAvD,CADF,EAEE;AACA,YAAMG,mBAAmB,GAAGrB,kBAAkB,CAACsB,MAAnB,CAA2BF,UAAD,IACpDA,UAAU,KAAKF,GADW,CAA5B;AAEAjB,MAAAA,qBAAqB,CAACoB,mBAAD,CAArB;AACD,KAND,MAMO;AACLpB,MAAAA,qBAAqB,CAAC,CAAC,GAAGD,kBAAJ,EAAwBkB,GAAxB,CAAD,CAArB;AACD;AACF,GAVD;;AAYA,MAAI3B,KAAK,CAACP,EAAD,CAAL,CAAUuC,MAAV,GAAmB,CAAvB,EAA0B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAC1B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAG9B,SAAS,CAACE,KADpB;AAEE,IAAA,KAAK,EAAGF,SAAS,CAACG,KAFpB;AAGE,IAAA,QAAQ,EAAGH,SAAS,CAACI,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIN,KAAK,CAACP,EAAD,CAAL,CAAUwC,GAAV,CAAc,CAACN,GAAD,EAAMO,KAAN,kBACZ;AACE,IAAA,GAAG,EAAGP,GADR;AAEE,mBAAe,eAAcO,KAAM,kBAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAG,MAAMR,WAAW,CAACC,GAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAQGA,GARH,CADF,CAFJ,CAFF,CARF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,mBAAY,cADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGzB,SAAS,CAACK,YAHb,CAFF,CA3BF,eAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,mBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAnCF,CADF;AA8CD,CA/GD;;AAiHAjB,WAAW,CAAC6C,SAAZ,GAAwB;AACtB5C,EAAAA,KAAK,EAAET,SAAS,CAACsD,KAAV,CAAgB;AACrB5C,IAAAA,MAAM,EAAEV,SAAS,CAACsD,KAAV,CAAgB;AACtB3C,MAAAA,EAAE,EAAEX,SAAS,CAACuD,IAAV,CAAeC;AADG,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALmB,CAAxB;AAQA,eAAehD,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderDetails from '../../components/HeaderDetails/HeaderDetails';\nimport { actionRequestItems, actionRequestOk, actionStoreInProcess } from '../../actions';\nimport { fetchApi } from '../../components/SearchBar/utils';\nimport { ingredientsMeasuresFunc } from './utils';\nimport { foodAndDrinksInProcessLocalStorage } from '../../functions';\n\nconst FoodProcess = ({ match: { params: { id } } }) => {\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector((state) => state.itemsReducer);\n  console.log(isLoading);\n  const { meals } = useSelector((state) => state.inProcessReducer);\n  const [itensInfo, setItensInfo] = useState({\n    image: '',\n    title: '',\n    category: '',\n    instructions: '',\n    ingredients: [],\n  });\n  const [checkedIngredients, setCheckedIngredients] = useState([]);\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      dispatch(actionRequestItems());\n      try {\n        const response = await fetchApi(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const { strMeal, strCategory, strMealThumb, strInstructions } = response.meals[0];\n        setItensInfo({\n          image: strMealThumb,\n          title: strMeal,\n          category: strCategory,\n          instructions: strInstructions,\n          ingredients: ingredientsMeasuresFunc(response),\n        });\n        const ingredients = ingredientsMeasuresFunc(response);\n        dispatch(actionStoreInProcess({\n          id,\n          ingredients: [...ingredients],\n        }));\n        dispatch(actionRequestOk());\n      } catch (error) {\n        console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n      }\n    };\n    fetchItem();\n    if (!localStorage.getItem('inProgressRecipes')) {\n      foodAndDrinksInProcessLocalStorage();\n    }\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    const updateInProgress = () => {\n      const key = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      key.meals[id] = [...checkedIngredients];\n      localStorage.setItem('inProgressRecipes', JSON.stringify(key));\n    };\n    updateInProgress();\n  }, [checkedIngredients, id, dispatch]);\n\n  const handleClick = (ing) => {\n    if (\n      checkedIngredients.some((ingredient) => ingredient === ing)\n    ) {\n      const filteredIngredients = checkedIngredients.filter((ingredient) => (\n        ingredient !== ing));\n      setCheckedIngredients(filteredIngredients);\n    } else {\n      setCheckedIngredients([...checkedIngredients, ing]);\n    }\n  };\n\n  if (meals[id].length > 0) return <h2>Loading...</h2>;\n  return (\n    <div>\n      <div>\n        <HeaderDetails\n          image={ itensInfo.image }\n          title={ itensInfo.title }\n          category={ itensInfo.category }\n        />\n      </div>\n      <div>\n        <h3>Ingredients</h3>\n        <ul>\n          {\n            meals[id].map((ing, index) => (\n              <li\n                key={ ing }\n                data-testid={ `data-testid=${index}-ingredient-step` }\n              >\n                <input\n                  type=\"checkbox\"\n                  onClick={ () => handleClick(ing) }\n                />\n                {ing}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n      <div>\n        <h3>Instructions</h3>\n        <p\n          data-testid=\"instructions\"\n        >\n          {itensInfo.instructions}\n        </p>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n        >\n          Finalizar Receita\n        </button>\n      </div>\n    </div>\n  );\n};\n\nFoodProcess.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default FoodProcess;\n"]},"metadata":{},"sourceType":"module"}