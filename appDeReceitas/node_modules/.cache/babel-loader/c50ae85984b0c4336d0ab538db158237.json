{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/components/FilterCategoriesButtons.js/CategoriesFilterButtons.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actionRequestItems, actionRequestSuccess } from '../../actions';\nimport { fetchApi } from '../SearchBar/utils';\n\nconst CategoriesFilterButtons = () => {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [erro, setErro] = useState(false);\n  const [apiUrl, setApiUrl] = useState('');\n  const dispatch = useDispatch();\n  const categoriesQuantity = 5; // comentario\n\n  useEffect(() => {\n    const path = window.location.pathname;\n    let type;\n\n    if (path === '/comidas') {\n      type = 'themealdb';\n      setApiUrl('themealdb');\n    }\n\n    if (path === '/bebidas') {\n      type = 'thecocktaildb';\n      setApiUrl('thecocktaildb');\n    }\n\n    const fetchCategories = async () => {\n      const response = await fetchApi(`https://www.${type}.com/api/json/v1/1/list.php?c=list`);\n      const responseKey = Object.keys(response);\n\n      if (response[responseKey].length > categoriesQuantity) {\n        const categoriesArray = response[responseKey].slice(0, categoriesQuantity);\n        setCategories(categoriesArray);\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  const fetchItems = async apiURL => {\n    dispatch(actionRequestItems());\n\n    try {\n      const response = await fetchApi(`https://www.${apiURL}.com/api/json/v1/1/search.php?s=`);\n      const responseKey = Object.keys(response);\n      dispatch(actionRequestSuccess(response[responseKey]));\n      setSelectedCategory('');\n    } catch (error) {\n      setErro(true);\n      console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n    }\n  };\n\n  const handleClick = async (category, apiURl, {\n    target: {\n      innerHTML\n    }\n  }) => {\n    if (innerHTML !== selectedCategory) {\n      dispatch(actionRequestItems());\n      const response = await fetchApi(`https://www.${apiURl}.com/api/json/v1/1/filter.php?c=${category}`);\n      const responseKey = Object.keys(response);\n      console.log(response[responseKey]);\n      dispatch(actionRequestSuccess(response[responseKey]));\n      setSelectedCategory(category);\n    } else {\n      fetchItems(apiUrl);\n    }\n  };\n\n  if (erro) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }\n  }, \"Algo deu errado. Tente novamente.\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    onClick: () => {\n      fetchItems(apiUrl);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"All\"), categories.map((categorie, index) => {\n    const name = Object.values(categorie);\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      \"data-testid\": `${categorie.strCategory}-category-filter`,\n      type: \"button\",\n      onClick: event => handleClick(categorie.strCategory, apiUrl, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, name[0]);\n  }));\n};\n\nexport default CategoriesFilterButtons;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/components/FilterCategoriesButtons.js/CategoriesFilterButtons.js"],"names":["React","useState","useEffect","useDispatch","actionRequestItems","actionRequestSuccess","fetchApi","CategoriesFilterButtons","categories","setCategories","selectedCategory","setSelectedCategory","erro","setErro","apiUrl","setApiUrl","dispatch","categoriesQuantity","path","window","location","pathname","type","fetchCategories","response","responseKey","Object","keys","length","categoriesArray","slice","fetchItems","apiURL","error","console","log","handleClick","category","apiURl","target","innerHTML","map","categorie","index","name","values","strCategory","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actionRequestItems, actionRequestSuccess } from '../../actions';\nimport { fetchApi } from '../SearchBar/utils';\n\nconst CategoriesFilterButtons = () => {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [erro, setErro] = useState(false);\n  const [apiUrl, setApiUrl] = useState('');\n  const dispatch = useDispatch();\n  const categoriesQuantity = 5;\n  // comentario\n\n  useEffect(() => {\n    const path = window.location.pathname;\n    let type;\n    if (path === '/comidas') {\n      type = 'themealdb';\n      setApiUrl('themealdb');\n    }\n    if (path === '/bebidas') {\n      type = 'thecocktaildb';\n      setApiUrl('thecocktaildb');\n    }\n    const fetchCategories = async () => {\n      const response = await fetchApi(`https://www.${type}.com/api/json/v1/1/list.php?c=list`);\n      const responseKey = Object.keys(response);\n      if (response[responseKey].length > categoriesQuantity) {\n        const categoriesArray = response[responseKey].slice(0, categoriesQuantity);\n        setCategories(categoriesArray);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  const fetchItems = async (apiURL) => {\n    dispatch(actionRequestItems());\n    try {\n      const response = await fetchApi(`https://www.${apiURL}.com/api/json/v1/1/search.php?s=`);\n      const responseKey = Object.keys(response);\n      dispatch(actionRequestSuccess(response[responseKey]));\n      setSelectedCategory('');\n    } catch (error) {\n      setErro(true);\n      console.log(`Erro ao carregar as primeiras receitas: ${error}`);\n    }\n  };\n\n  const handleClick = async (category, apiURl, { target: { innerHTML } }) => {\n    if (innerHTML !== selectedCategory) {\n      dispatch(actionRequestItems());\n      const response = await fetchApi(`https://www.${apiURl}.com/api/json/v1/1/filter.php?c=${category}`);\n      const responseKey = Object.keys(response);\n      console.log(response[responseKey]);\n      dispatch(actionRequestSuccess(response[responseKey]));\n      setSelectedCategory(category);\n    } else {\n      fetchItems(apiUrl);\n    }\n  };\n\n  if (erro) return <p>Algo deu errado. Tente novamente.</p>;\n  return (\n    <div>\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => { fetchItems(apiUrl); } }\n      >\n        All\n      </button>\n      {\n        categories.map((categorie, index) => {\n          const name = Object.values(categorie);\n          return (\n            <button\n              key={ index }\n              data-testid={ `${categorie.strCategory}-category-filter` }\n              type=\"button\"\n              onClick={\n                (event) => handleClick(categorie.strCategory, apiUrl, event)\n              }\n            >\n              {name[0]}\n            </button>);\n        })\n      }\n    </div>\n  );\n};\n\nexport default CategoriesFilterButtons;\n"]},"metadata":{},"sourceType":"module"}