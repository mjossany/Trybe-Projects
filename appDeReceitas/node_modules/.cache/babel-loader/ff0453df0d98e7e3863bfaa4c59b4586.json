{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/components/Recomentation/Recomendation.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from 'react-bootstrap';\nimport './Recomendation.css';\n\nconst Recomendation = ({\n  list,\n  type\n}) => {\n  if (!list) return /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 21\n    }\n  });\n  const maxItens = 6;\n  let newArray = [];\n\n  if (list.length > maxItens) {\n    newArray = list.slice(0, maxItens);\n  } else {\n    newArray = list;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Recomendation\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recomendation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, newArray.map((obj, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    \"data-testid\": `${index}-recomendation-card`,\n    className: \"card-recomendation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"120px\",\n    \"data-testid\": `${index}-card-img`,\n    src: obj[`str${type}Thumb`],\n    alt: obj[`str${type}`],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": `${index}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, obj[`str${type}`])))));\n};\n\nRecomendation.propTypes = {\n  list: PropTypes.node.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default Recomendation;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/appDeReceitas/sd-012-project-recipes-app/src/components/Recomentation/Recomendation.js"],"names":["React","PropTypes","Spinner","Recomendation","list","type","maxItens","newArray","length","slice","map","obj","index","propTypes","node","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AACxC,MAAI,CAACD,IAAL,EAAW,oBAAO,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,QAAME,QAAQ,GAAG,CAAjB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAIH,IAAI,CAACI,MAAL,GAAcF,QAAlB,EAA4B;AAC1BC,IAAAA,QAAQ,GAAGH,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcH,QAAd,CAAX;AACD,GAFD,MAEO;AACLC,IAAAA,QAAQ,GAAGH,IAAX;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIG,QAAQ,CAACG,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,kBACb;AACE,IAAA,GAAG,EAAGA,KADR;AAEE,mBAAe,GAAEA,KAAM,qBAFzB;AAGE,IAAA,SAAS,EAAC,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,KAAK,EAAC,OADR;AAEE,mBAAe,GAAEA,KAAM,WAFzB;AAGE,IAAA,GAAG,EAAGD,GAAG,CAAE,MAAKN,IAAK,OAAZ,CAHX;AAIE,IAAA,GAAG,EAAGM,GAAG,CAAE,MAAKN,IAAK,EAAZ,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAWE;AAAI,mBAAe,GAAEO,KAAM,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDD,GAAG,CAAE,MAAKN,IAAK,EAAZ,CAAxD,CAXF,CADA,CADJ,CAFF,CADF;AAsBD,CA/BD;;AAiCAF,aAAa,CAACU,SAAd,GAA0B;AACxBT,EAAAA,IAAI,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADG;AAExBV,EAAAA,IAAI,EAAEJ,SAAS,CAACe,MAAV,CAAiBD;AAFC,CAA1B;AAKA,eAAeZ,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from 'react-bootstrap';\nimport './Recomendation.css';\n\nconst Recomendation = ({ list, type }) => {\n  if (!list) return <Spinner animation=\"border\" />;\n  const maxItens = 6;\n  let newArray = [];\n  if (list.length > maxItens) {\n    newArray = list.slice(0, maxItens);\n  } else {\n    newArray = list;\n  }\n  return (\n    <div className=\"component-details\">\n      <h1>Recomendation</h1>\n      <div className=\"recomendation\">\n        { newArray.map((obj, index) => (\n          <div\n            key={ index }\n            data-testid={ `${index}-recomendation-card` }\n            className=\"card-recomendation\"\n          >\n            <img\n              width=\"120px\"\n              data-testid={ `${index}-card-img` }\n              src={ obj[`str${type}Thumb`] }\n              alt={ obj[`str${type}`] }\n            />\n            <h3 data-testid={ `${index}-recomendation-title` }>{ obj[`str${type}`] }</h3>\n          </div>\n        )) }\n      </div>\n    </div>\n  );\n};\n\nRecomendation.propTypes = {\n  list: PropTypes.node.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Recomendation;\n"]},"metadata":{},"sourceType":"module"}