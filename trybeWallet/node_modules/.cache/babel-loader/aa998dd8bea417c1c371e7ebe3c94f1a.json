{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/trybeWallet/sd-012-project-trybewallet/src/components/Wallet/ExpenseForm/ExpenseCurrencyInput.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { func, arrayOf, string } from 'prop-types';\nimport fetchCurrencies from '../../../fetchs/fetchCurrencies';\n\nclass ExpenseCurrencyInput extends Component {\n  componentDidMount() {\n    const {\n      getCurrencies\n    } = this.props;\n    getCurrencies();\n  }\n\n  render() {\n    const {\n      currencies,\n      handleChange\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"currency-input\",\n      \"data-testid\": \"currency-input\",\n      name: \"currency\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, currencies.map(currencie => /*#__PURE__*/React.createElement(\"option\", {\n      key: currencie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, currencie))));\n  }\n\n}\n\nExpenseCurrencyInput.propTypes = {\n  getCurrencies: func.isRequired,\n  currencies: arrayOf(string).isRequired,\n  handleChange: func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrencies: () => dispatch(fetchCurrencies())\n});\n\nconst mapStateToProps = ({\n  wallet\n}) => ({\n  currencies: wallet.currencies\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseCurrencyInput);","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/trybeWallet/sd-012-project-trybewallet/src/components/Wallet/ExpenseForm/ExpenseCurrencyInput.js"],"names":["React","Component","connect","func","arrayOf","string","fetchCurrencies","ExpenseCurrencyInput","componentDidMount","getCurrencies","props","render","currencies","handleChange","map","currencie","propTypes","isRequired","mapDispatchToProps","dispatch","mapStateToProps","wallet"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,YAAtC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;AAEA,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AAC3CO,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAKC,KAA/B;AACAD,IAAAA,aAAa;AACd;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA+B,KAAKH,KAA1C;AACA,wBACE;AACE,MAAA,OAAO,EAAC,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAIE;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,qBAAY,gBAFd;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,QAAQ,EAAGG,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMID,UAAU,CAACE,GAAX,CAAgBC,SAAD,iBACf;AACE,MAAA,GAAG,EAAGA,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIA,SAHJ,CADA,CANJ,CAJF,CADF;AAqBD;;AA7B0C;;AAgC7CR,oBAAoB,CAACS,SAArB,GAAiC;AAC/BP,EAAAA,aAAa,EAAEN,IAAI,CAACc,UADW;AAE/BL,EAAAA,UAAU,EAAER,OAAO,CAACC,MAAD,CAAP,CAAgBY,UAFG;AAG/BJ,EAAAA,YAAY,EAAEV,IAAI,CAACc;AAHY,CAAjC;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,aAAa,EAAE,MAAMU,QAAQ,CAACb,eAAe,EAAhB;AADW,CAAf,CAA3B;;AAIA,MAAMc,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAiB;AACvCT,EAAAA,UAAU,EAAES,MAAM,CAACT;AADoB,CAAjB,CAAxB;;AAIA,eAAeV,OAAO,CAACkB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CX,oBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { func, arrayOf, string } from 'prop-types';\nimport fetchCurrencies from '../../../fetchs/fetchCurrencies';\n\nclass ExpenseCurrencyInput extends Component {\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  render() {\n    const { currencies, handleChange } = this.props;\n    return (\n      <label\n        htmlFor=\"currency-input\"\n      >\n        Moeda\n        <select\n          id=\"currency-input\"\n          data-testid=\"currency-input\"\n          name=\"currency\"\n          onChange={ handleChange }\n        >\n          { currencies.map((currencie) => (\n            <option\n              key={ currencie }\n            >\n              { currencie }\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n}\n\nExpenseCurrencyInput.propTypes = {\n  getCurrencies: func.isRequired,\n  currencies: arrayOf(string).isRequired,\n  handleChange: func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n});\n\nconst mapStateToProps = ({ wallet }) => ({\n  currencies: wallet.currencies,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseCurrencyInput);\n"]},"metadata":{},"sourceType":"module"}