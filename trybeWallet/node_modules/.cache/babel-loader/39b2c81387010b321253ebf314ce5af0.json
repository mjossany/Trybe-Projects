{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/trybeWallet/sd-012-project-trybewallet/src/components/Wallet/ExpenseForm/ExpensePaymentMethodInput.js\";\nimport React, { Component } from 'react';\n\nclass ExpensePaymentMethodInput extends Component {\n  render() {\n    const paymentMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"paymento-method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, \"M\\xE9todo de pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"paymento-method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, paymentMethods.map(method => /*#__PURE__*/React.createElement(\"option\", {\n      key: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, method))));\n  }\n\n}\n\nexport default ExpensePaymentMethodInput;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/trybeWallet/sd-012-project-trybewallet/src/components/Wallet/ExpenseForm/ExpensePaymentMethodInput.js"],"names":["React","Component","ExpensePaymentMethodInput","render","paymentMethods","map","method"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,yBAAN,SAAwCD,SAAxC,CAAkD;AAChDE,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAG,CAAC,UAAD,EAAa,mBAAb,EAAkC,kBAAlC,CAAvB;AACA,wBACE;AACE,MAAA,OAAO,EAAC,iBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAIE;AACE,MAAA,EAAE,EAAC,iBADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIA,cAAc,CAACC,GAAf,CAAoBC,MAAD,iBACnB;AACE,MAAA,GAAG,EAAGA,MADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGA,MAHH,CADA,CAHJ,CAJF,CADF;AAkBD;;AArB+C;;AAwBlD,eAAeJ,yBAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass ExpensePaymentMethodInput extends Component {\n  render() {\n    const paymentMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    return (\n      <label\n        htmlFor=\"paymento-method\"\n      >\n        Método de pagamento\n        <select\n          id=\"paymento-method\"\n        >\n          { paymentMethods.map((method) => (\n            <option\n              key={ method }\n            >\n              {method}\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n}\n\nexport default ExpensePaymentMethodInput;\n"]},"metadata":{},"sourceType":"module"}