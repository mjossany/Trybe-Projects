{"ast":null,"code":"import { REQUEST_CURRENCIES_SUCCESS, REQUEST_CURRENCIES_ERROR, REQUEST_CURRENCIESII_SUCCESS, REQUEST_CURRENCIESII_ERROR } from '../actions/index'; // Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  error: ''\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case REQUEST_CURRENCIES_SUCCESS:\n      return { ...state,\n        currencies: action.payload,\n        error: ''\n      };\n\n    case REQUEST_CURRENCIES_ERROR:\n      return { ...state,\n        error: 'Erro ao obter currencies'\n      };\n\n    case REQUEST_CURRENCIESII_SUCCESS:\n      return { ...state,\n        expenses: [...state.expenses, {\n          id: state.expenses.length,\n          ...action.payload\n        }],\n        error: ''\n      };\n\n    case REQUEST_CURRENCIESII_ERROR:\n      return { ...state,\n        error: 'Erro ao obter currencies'\n      };\n\n    case EXCLUDE_EXPENSE:\n      return { ...state,\n        expenses: [...state.expenses.filter(({\n          id\n        }) => id !== action.payload.id)]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default walletReducer;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/trybeWallet/sd-012-project-trybewallet/src/reducers/wallet.js"],"names":["REQUEST_CURRENCIES_SUCCESS","REQUEST_CURRENCIES_ERROR","REQUEST_CURRENCIESII_SUCCESS","REQUEST_CURRENCIESII_ERROR","INITIAL_STATE","currencies","expenses","error","walletReducer","state","action","type","payload","id","length","EXCLUDE_EXPENSE","filter"],"mappings":"AAAA,SACEA,0BADF,EAEEC,wBAFF,EAGEC,4BAHF,EAIEC,0BAJF,QAKO,kBALP,C,CAOA;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;;AAMA,SAASC,aAAT,CAAuBC,KAAK,GAAGL,aAA/B,EAA8CM,MAA9C,EAAsD;AACpD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKX,0BAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYJ,QAAAA,UAAU,EAAEK,MAAM,CAACE,OAA/B;AAAwCL,QAAAA,KAAK,EAAE;AAA/C,OAAP;;AAEF,SAAKN,wBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYF,QAAAA,KAAK,EAAE;AAAnB,OAAP;;AAEF,SAAKL,4BAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,QAAQ,EAAE,CACR,GAAGG,KAAK,CAACH,QADD,EACW;AAAEO,UAAAA,EAAE,EAAEJ,KAAK,CAACH,QAAN,CAAeQ,MAArB;AAA6B,aAAGJ,MAAM,CAACE;AAAvC,SADX,CAFL;AAKLL,QAAAA,KAAK,EAAE;AALF,OAAP;;AAOF,SAAKJ,0BAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,KAAK,EAAE;AAAnB,OAAP;;AAEF,SAAKQ,eAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,QAAQ,EAAE,CACR,GAAGG,KAAK,CAACH,QAAN,CAAeU,MAAf,CAAsB,CAAC;AAAEH,UAAAA;AAAF,SAAD,KAAYA,EAAE,KAAKH,MAAM,CAACE,OAAP,CAAeC,EAAxD,CADK;AAFL,OAAP;;AAOF;AACE,aAAOJ,KAAP;AA3BF;AA6BD;;AAED,eAAeD,aAAf","sourcesContent":["import {\n  REQUEST_CURRENCIES_SUCCESS,\n  REQUEST_CURRENCIES_ERROR,\n  REQUEST_CURRENCIESII_SUCCESS,\n  REQUEST_CURRENCIESII_ERROR,\n} from '../actions/index';\n\n// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  error: '',\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case REQUEST_CURRENCIES_SUCCESS:\n    return { ...state, currencies: action.payload, error: '' };\n\n  case REQUEST_CURRENCIES_ERROR:\n    return { ...state, error: 'Erro ao obter currencies' };\n\n  case REQUEST_CURRENCIESII_SUCCESS:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses, { id: state.expenses.length, ...action.payload },\n      ],\n      error: '' };\n\n  case REQUEST_CURRENCIESII_ERROR:\n    return { ...state, error: 'Erro ao obter currencies' };\n\n  case EXCLUDE_EXPENSE:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses.filter(({ id }) => id !== action.payload.id),\n      ],\n    };\n\n  default:\n    return state;\n  }\n}\n\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}