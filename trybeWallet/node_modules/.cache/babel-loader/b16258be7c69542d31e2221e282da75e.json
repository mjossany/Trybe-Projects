{"ast":null,"code":"import { REQUEST_CURRENCIES_SUCCESS, REQUEST_CURRENCIES_ERROR, REQUEST_CURRENCIESII_SUCCESS, REQUEST_CURRENCIESII_ERROR, EXCLUDE_EXPENSE, EDIT_EXPENSE } from '../actions/index'; // Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  error: ''\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case REQUEST_CURRENCIES_SUCCESS:\n      return { ...state,\n        currencies: action.payload,\n        error: ''\n      };\n\n    case REQUEST_CURRENCIES_ERROR:\n      return { ...state,\n        error: 'Erro ao obter currencies'\n      };\n\n    case REQUEST_CURRENCIESII_SUCCESS:\n      return { ...state,\n        expenses: [...state.expenses, {\n          id: state.expenses.length,\n          ...action.payload\n        }],\n        error: ''\n      };\n\n    case REQUEST_CURRENCIESII_ERROR:\n      return { ...state,\n        error: 'Erro ao obter currencies'\n      };\n\n    case EXCLUDE_EXPENSE:\n      return { ...state,\n        expenses: state.expenses.filter(({\n          id\n        }) => id !== action.payload)\n      };\n\n    case EDIT_EXPENSE:\n      return { ...state,\n        expenses: state.expenses.reduce((list, expense) => expense.id === action.state.id ? [...list, { ...action.payload,\n          exchangeRates: expense.exchangeRates\n        }] : [...list, { ...expense\n        }], [])\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default walletReducer;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/trybeWallet/sd-012-project-trybewallet/src/reducers/wallet.js"],"names":["REQUEST_CURRENCIES_SUCCESS","REQUEST_CURRENCIES_ERROR","REQUEST_CURRENCIESII_SUCCESS","REQUEST_CURRENCIESII_ERROR","EXCLUDE_EXPENSE","EDIT_EXPENSE","INITIAL_STATE","currencies","expenses","error","walletReducer","state","action","type","payload","id","length","filter","reduce","list","expense","exchangeRates"],"mappings":"AAAA,SACEA,0BADF,EAEEC,wBAFF,EAGEC,4BAHF,EAIEC,0BAJF,EAKEC,eALF,EAMEC,YANF,QAOO,kBAPP,C,CASA;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;;AAMA,SAASC,aAAT,CAAuBC,KAAK,GAAGL,aAA/B,EAA8CM,MAA9C,EAAsD;AACpD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKb,0BAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYJ,QAAAA,UAAU,EAAEK,MAAM,CAACE,OAA/B;AAAwCL,QAAAA,KAAK,EAAE;AAA/C,OAAP;;AAEF,SAAKR,wBAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYF,QAAAA,KAAK,EAAE;AAAnB,OAAP;;AAEF,SAAKP,4BAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,QAAQ,EAAE,CACR,GAAGG,KAAK,CAACH,QADD,EACW;AAAEO,UAAAA,EAAE,EAAEJ,KAAK,CAACH,QAAN,CAAeQ,MAArB;AAA6B,aAAGJ,MAAM,CAACE;AAAvC,SADX,CAFL;AAKLL,QAAAA,KAAK,EAAE;AALF,OAAP;;AAOF,SAAKN,0BAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYF,QAAAA,KAAK,EAAE;AAAnB,OAAP;;AAEF,SAAKL,eAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeS,MAAf,CAAsB,CAAC;AAAEF,UAAAA;AAAF,SAAD,KAAYA,EAAE,KAAKH,MAAM,CAACE,OAAhD;AAFL,OAAP;;AAKF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeU,MAAf,CAAsB,CAACC,IAAD,EAAOC,OAAP,KAC9BA,OAAO,CAACL,EAAR,KAAeH,MAAM,CAACD,KAAP,CAAaI,EAA5B,GACI,CAAC,GAAGI,IAAJ,EAAU,EAAE,GAAGP,MAAM,CAACE,OAAZ;AAAqBO,UAAAA,aAAa,EAAED,OAAO,CAACC;AAA5C,SAAV,CADJ,GAEI,CAAC,GAAGF,IAAJ,EAAU,EAAE,GAAGC;AAAL,SAAV,CAHI,EAGwB,EAHxB;AAFL,OAAP;;AAQF;AACE,aAAOT,KAAP;AAlCF;AAoCD;;AAED,eAAeD,aAAf","sourcesContent":["import {\n  REQUEST_CURRENCIES_SUCCESS,\n  REQUEST_CURRENCIES_ERROR,\n  REQUEST_CURRENCIESII_SUCCESS,\n  REQUEST_CURRENCIESII_ERROR,\n  EXCLUDE_EXPENSE,\n  EDIT_EXPENSE,\n} from '../actions/index';\n\n// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  error: '',\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case REQUEST_CURRENCIES_SUCCESS:\n    return { ...state, currencies: action.payload, error: '' };\n\n  case REQUEST_CURRENCIES_ERROR:\n    return { ...state, error: 'Erro ao obter currencies' };\n\n  case REQUEST_CURRENCIESII_SUCCESS:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses, { id: state.expenses.length, ...action.payload },\n      ],\n      error: '' };\n\n  case REQUEST_CURRENCIESII_ERROR:\n    return { ...state, error: 'Erro ao obter currencies' };\n\n  case EXCLUDE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter(({ id }) => id !== action.payload),\n    };\n\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.reduce((list, expense) => (\n        expense.id === action.state.id\n          ? [...list, { ...action.payload, exchangeRates: expense.exchangeRates }]\n          : [...list, { ...expense }]), []),\n    };\n\n  default:\n    return state;\n  }\n}\n\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}