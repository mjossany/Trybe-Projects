{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/SearchAndResults.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport Products from './Products';\n\nclass SearchAndResults extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      productList: []\n    };\n    this.getInput = this.getInput.bind(this);\n    this.getProducts = this.getProducts.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      category,\n      search\n    } = this.props;\n    const {\n      search: prevSearch\n    } = prevState;\n    const {\n      category: prevCategory\n    } = prevProps;\n\n    if (prevSearch !== search || prevCategory !== category) {\n      this.getProducts();\n    }\n  }\n\n  getInput({\n    target\n  }) {\n    this.setState({\n      search: target.value\n    });\n  }\n\n  async getProducts() {\n    const {\n      category,\n      search\n    } = this.props;\n    const response = await api.getProductsFromCategoryAndQuery(category, search);\n    this.setState({\n      productList: response.results\n    });\n  }\n\n  render() {\n    const {\n      productList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"query-input\",\n      onChange: this.getInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: this.getProducts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(Products, {\n      productList: productList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nSearchAndResults.propTypes = {\n  category: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired\n};\nexport default SearchAndResults;\n/*\nReferencia Git Hub:\nTurma 11 - Grupo 35\nAjudou a fazer função da requisição da api.\nhttps://github.com/tryber/sd-011-project-frontend-online-store/tree/requisito-5-grupo-35/src\nTurma 10 - Grupo 9:\nAjudou no tratamento de informações da lista de produtos(função map product.js).\nhttps://github.com/tryber/sd-010-a-project-frontend-online-store/tree/grupo9-requisito-5/src\n*/","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/SearchAndResults.js"],"names":["React","PropTypes","api","Products","SearchAndResults","Component","constructor","state","productList","getInput","bind","getProducts","componentDidUpdate","prevProps","prevState","category","search","props","prevSearch","prevCategory","target","setState","value","response","getProductsFromCategoryAndQuery","results","render","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKC,KAAlC;AACA,UAAM;AAAED,MAAAA,MAAM,EAAEE;AAAV,QAAyBJ,SAA/B;AACA,UAAM;AAAEC,MAAAA,QAAQ,EAAEI;AAAZ,QAA6BN,SAAnC;;AACA,QAAIK,UAAU,KAAKF,MAAf,IAAyBG,YAAY,KAAKJ,QAA9C,EAAwD;AACtD,WAAKJ,WAAL;AACD;AACF;;AAEDF,EAAAA,QAAQ,CAAC;AAAEW,IAAAA;AAAF,GAAD,EAAa;AACnB,SAAKC,QAAL,CAAc;AACZL,MAAAA,MAAM,EAAEI,MAAM,CAACE;AADH,KAAd;AAGD;;AAED,QAAMX,WAAN,GAAoB;AAClB,UAAM;AAAEI,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKC,KAAlC;AACA,UAAMM,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,+BAAJ,CAAoCT,QAApC,EAA8CC,MAA9C,CAAvB;AACA,SAAKK,QAAL,CAAc;AACZb,MAAAA,WAAW,EAAEe,QAAQ,CAACE;AADV,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,qBAAY,aAFd;AAGE,MAAA,QAAQ,EAAG,KAAKE,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AACE,qBAAY,sBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEANF,eAWE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,cAFd;AAGE,MAAA,OAAO,EAAG,KAAKE,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAkBE,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAGH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CADF;AAsBD;;AAzD4C;;AA4D/CJ,gBAAgB,CAACuB,SAAjB,GAA6B;AAC3BZ,EAAAA,QAAQ,EAAEd,SAAS,CAAC2B,MAAV,CAAiBC,UADA;AAE3Bb,EAAAA,MAAM,EAAEf,SAAS,CAAC2B,MAAV,CAAiBC;AAFE,CAA7B;AAKA,eAAezB,gBAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport Products from './Products';\n\nclass SearchAndResults extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      productList: [],\n    };\n    this.getInput = this.getInput.bind(this);\n    this.getProducts = this.getProducts.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { category, search } = this.props;\n    const { search: prevSearch } = prevState;\n    const { category: prevCategory } = prevProps;\n    if (prevSearch !== search || prevCategory !== category) {\n      this.getProducts();\n    }\n  }\n\n  getInput({ target }) {\n    this.setState({\n      search: target.value,\n    });\n  }\n\n  async getProducts() {\n    const { category, search } = this.props;\n    const response = await api.getProductsFromCategoryAndQuery(category, search);\n    this.setState({\n      productList: response.results,\n    });\n  }\n\n  render() {\n    const { productList } = this.state;\n    return (\n      <div>\n        <input\n          type=\"text\"\n          data-testid=\"query-input\"\n          onChange={ this.getInput }\n        />\n        <p\n          data-testid=\"home-initial-message\"\n        >\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n        <button\n          type=\"button\"\n          data-testid=\"query-button\"\n          onClick={ this.getProducts }\n        >\n          Search\n        </button>\n        <Products productList={ productList } />\n      </div>\n    );\n  }\n}\n\nSearchAndResults.propTypes = {\n  category: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n};\n\nexport default SearchAndResults;\n\n/*\nReferencia Git Hub:\nTurma 11 - Grupo 35\nAjudou a fazer função da requisição da api.\nhttps://github.com/tryber/sd-011-project-frontend-online-store/tree/requisito-5-grupo-35/src\nTurma 10 - Grupo 9:\nAjudou no tratamento de informações da lista de produtos(função map product.js).\nhttps://github.com/tryber/sd-010-a-project-frontend-online-store/tree/grupo9-requisito-5/src\n*/\n"]},"metadata":{},"sourceType":"module"}