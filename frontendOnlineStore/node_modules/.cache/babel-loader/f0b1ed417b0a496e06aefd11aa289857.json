{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/ShoppingCart.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\nexport default class ShoppingCart extends React.Component {\n  constructor() {\n    super();\n    this.changeCheckoutState = this.changeCheckoutState.bind(this);\n    this.renderCheckout = this.renderCheckout.bind(this);\n    this.state = {\n      total: 0,\n      checkout: false\n    };\n  }\n\n  componentDidMount() {\n    this.sumPrice();\n  }\n\n  componentDidUpdate() {\n    this.sumPrice();\n  }\n\n  sumPrice() {\n    const {\n      total\n    } = this.state;\n    const {\n      cartList\n    } = this.props;\n    const sumTotal = cartList.map(({\n      price,\n      quantity\n    }) => price * quantity).reduce((totalPrice, price) => totalPrice + price, 0);\n    if (total !== sumTotal) this.setState({\n      total: sumTotal\n    });\n  }\n\n  changeCheckoutState() {\n    const {\n      checkout\n    } = this.state;\n    this.setState({\n      checkout: !checkout\n    });\n  }\n\n  renderCheckout() {\n    const {\n      checkout\n    } = this.state;\n    return checkout === true && /*#__PURE__*/React.createElement(Checkout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    });\n  }\n\n  render() {\n    const {\n      total\n    } = this.state;\n    const {\n      cartList,\n      removeItem,\n      setQuantity\n    } = this.props;\n\n    if (cartList.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        \"data-testid\": \"shopping-cart-empty-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      }, \"Seu carrinho est\\xE1 vazio\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shopping-cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cards-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, `Total: ${total.toFixed(2)}`), cartList.map(({\n      id,\n      price,\n      quantity,\n      thumbnail,\n      title,\n      availableQuantity\n    }, index) => /*#__PURE__*/React.createElement(CartItem, {\n      key: index,\n      id: id,\n      price: price,\n      quantity: quantity,\n      thumbnail: thumbnail,\n      title: title,\n      removeItem: removeItem,\n      setQuantity: setQuantity,\n      availableQuantity: availableQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"checkout-products\",\n      onClick: this.changeCheckoutState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Finalizar compra\")), this.renderCheckout());\n  }\n\n}\nShoppingCart.propTypes = {\n  cartList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired\n  })).isRequired,\n  removeItem: PropTypes.func.isRequired,\n  setQuantity: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/ShoppingCart.js"],"names":["React","PropTypes","CartItem","Checkout","ShoppingCart","Component","constructor","changeCheckoutState","bind","renderCheckout","state","total","checkout","componentDidMount","sumPrice","componentDidUpdate","cartList","props","sumTotal","map","price","quantity","reduce","totalPrice","setState","render","removeItem","setQuantity","length","toFixed","id","thumbnail","title","availableQuantity","index","propTypes","arrayOf","shape","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\n\nexport default class ShoppingCart extends React.Component {\n  constructor() {\n    super();\n    this.changeCheckoutState = this.changeCheckoutState.bind(this);\n    this.renderCheckout = this.renderCheckout.bind(this);\n    this.state = {\n      total: 0,\n      checkout: false,\n    };\n  }\n\n  componentDidMount() {\n    this.sumPrice();\n  }\n\n  componentDidUpdate() {\n    this.sumPrice();\n  }\n\n  sumPrice() {\n    const { total } = this.state;\n    const { cartList } = this.props;\n    const sumTotal = cartList\n      .map(({ price, quantity }) => price * quantity)\n      .reduce((totalPrice, price) => totalPrice + price, 0);\n    if (total !== sumTotal) this.setState({ total: sumTotal });\n  }\n\n  changeCheckoutState() {\n    const { checkout } = this.state;\n    this.setState({ checkout: !checkout });\n  }\n\n  renderCheckout() {\n    const { checkout } = this.state;\n    return checkout === true && <Checkout />;\n  }\n\n  render() {\n    const { total } = this.state;\n    const { cartList, removeItem, setQuantity } = this.props;\n    if (cartList.length === 0) {\n      return <h1 data-testid=\"shopping-cart-empty-message\">Seu carrinho est√° vazio</h1>;\n    }\n    return (\n      <div>\n        <div className=\"shopping-cart\">\n          <div className=\"cards-div\">\n            <p>{`Total: ${total.toFixed(2)}`}</p>\n            {\n              cartList.map((\n                { id, price, quantity, thumbnail, title, availableQuantity }, index,\n              ) => (<CartItem\n                key={ index }\n                id={ id }\n                price={ price }\n                quantity={ quantity }\n                thumbnail={ thumbnail }\n                title={ title }\n                removeItem={ removeItem }\n                setQuantity={ setQuantity }\n                availableQuantity={ availableQuantity }\n              />))\n            }\n          </div>\n          <button\n            type=\"button\"\n            data-testid=\"checkout-products\"\n            onClick={ this.changeCheckoutState }\n          >\n            Finalizar compra\n          </button>\n        </div>\n        { this.renderCheckout() }\n      </div>\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  cartList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      quantity: PropTypes.number.isRequired,\n      thumbnail: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  removeItem: PropTypes.func.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}