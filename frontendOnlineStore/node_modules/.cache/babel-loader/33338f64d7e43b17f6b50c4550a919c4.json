{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/SearchResults.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport Products from './Products';\n\nclass SearchResults extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      productList: []\n    };\n    this.getProducts = this.getProducts.bind(this);\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      category,\n      search\n    } = this.props;\n    const {\n      category: prevCategory,\n      search: prevSearch\n    } = prevProps;\n\n    if (prevSearch !== search || prevCategory !== category) {\n      this.getProducts();\n    }\n  }\n\n  async getProducts() {\n    const {\n      search,\n      category\n    } = this.props;\n    this.setState({\n      loading: true\n    }, async () => {\n      const response = await api.getProductsFromCategoryAndQuery(category, search);\n      this.setState({\n        productList: response.results,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      productList,\n      loading\n    } = this.state;\n    const {\n      setCartStorage\n    } = this.props;\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, \"Carregando...\");\n\n    if (productList.length === 0) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, \"Nenhum produto foi encontrado\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Products, {\n      productList: productList,\n      setCartStorage: setCartStorage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nSearchResults.propTypes = {\n  category: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  setCartStorage: PropTypes.func.isRequired\n};\nexport default SearchResults;\n/*\nReferencia Git Hub:\nTurma 11 - Grupo 35\nAjudou a fazer função da requisição da api.\nhttps://github.com/tryber/sd-011-project-frontend-online-store/tree/requisito-5-grupo-35/src\nTurma 10 - Grupo 9:\nAjudou no tratamento de informações da lista de produtos(função map product.js).\nhttps://github.com/tryber/sd-010-a-project-frontend-online-store/tree/grupo9-requisito-5/src\n*/","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/SearchResults.js"],"names":["React","PropTypes","api","Products","SearchResults","Component","constructor","state","loading","productList","getProducts","bind","componentDidMount","componentDidUpdate","prevProps","category","search","props","prevCategory","prevSearch","setState","response","getProductsFromCategoryAndQuery","results","render","setCartStorage","length","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,WAAL;AACD;;AAEDG,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKC,KAAlC;AACA,UAAM;AAAEF,MAAAA,QAAQ,EAAEG,YAAZ;AAA0BF,MAAAA,MAAM,EAAEG;AAAlC,QAAiDL,SAAvD;;AACA,QAAIK,UAAU,KAAKH,MAAf,IAAyBE,YAAY,KAAKH,QAA9C,EAAwD;AACtD,WAAKL,WAAL;AACD;AACF;;AAED,QAAMA,WAAN,GAAoB;AAClB,UAAM;AAAEM,MAAAA,MAAF;AAAUD,MAAAA;AAAV,QAAuB,KAAKE,KAAlC;AACA,SAAKG,QAAL,CAAc;AACZZ,MAAAA,OAAO,EAAE;AADG,KAAd,EAEG,YAAY;AACb,YAAMa,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,+BAAJ,CAAoCP,QAApC,EAA8CC,MAA9C,CAAvB;AACA,WAAKI,QAAL,CAAc;AACZX,QAAAA,WAAW,EAAEY,QAAQ,CAACE,OADV;AAEZf,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KARD;AASD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,WAAF;AAAeD,MAAAA;AAAf,QAA2B,KAAKD,KAAtC;AACA,UAAM;AAAEkB,MAAAA;AAAF,QAAqB,KAAKR,KAAhC;AACA,QAAIT,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;;AACb,QAAIC,WAAW,CAACiB,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF;AAGD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAGjB,WAAxB;AAAsC,MAAA,cAAc,EAAGgB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAjDyC;;AAoD5CrB,aAAa,CAACuB,SAAd,GAA0B;AACxBZ,EAAAA,QAAQ,EAAEd,SAAS,CAAC2B,MAAV,CAAiBC,UADH;AAExBb,EAAAA,MAAM,EAAEf,SAAS,CAAC2B,MAAV,CAAiBC,UAFD;AAGxBJ,EAAAA,cAAc,EAAExB,SAAS,CAAC6B,IAAV,CAAeD;AAHP,CAA1B;AAMA,eAAezB,aAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport Products from './Products';\n\nclass SearchResults extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      productList: [],\n    };\n    this.getProducts = this.getProducts.bind(this);\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { category, search } = this.props;\n    const { category: prevCategory, search: prevSearch } = prevProps;\n    if (prevSearch !== search || prevCategory !== category) {\n      this.getProducts();\n    }\n  }\n\n  async getProducts() {\n    const { search, category } = this.props;\n    this.setState({\n      loading: true,\n    }, async () => {\n      const response = await api.getProductsFromCategoryAndQuery(category, search);\n      this.setState({\n        productList: response.results,\n        loading: false,\n      });\n    });\n  }\n\n  render() {\n    const { productList, loading } = this.state;\n    const { setCartStorage } = this.props;\n    if (loading) return <p>Carregando...</p>;\n    if (productList.length === 0) {\n      return (\n        <p>Nenhum produto foi encontrado</p>\n      );\n    }\n    return (\n      <div>\n        <Products productList={ productList } setCartStorage={ setCartStorage } />\n      </div>\n    );\n  }\n}\n\nSearchResults.propTypes = {\n  category: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  setCartStorage: PropTypes.func.isRequired,\n};\n\nexport default SearchResults;\n\n/*\nReferencia Git Hub:\nTurma 11 - Grupo 35\nAjudou a fazer função da requisição da api.\nhttps://github.com/tryber/sd-011-project-frontend-online-store/tree/requisito-5-grupo-35/src\nTurma 10 - Grupo 9:\nAjudou no tratamento de informações da lista de produtos(função map product.js).\nhttps://github.com/tryber/sd-010-a-project-frontend-online-store/tree/grupo9-requisito-5/src\n*/\n"]},"metadata":{},"sourceType":"module"}