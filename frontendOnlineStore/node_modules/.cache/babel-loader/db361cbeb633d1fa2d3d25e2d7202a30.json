{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/CartItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CartItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quantity: props.quantity\n    };\n    this.handlerQty = this.handlerQty.bind(this);\n    this.renderButtonAddQuantity = this.renderButtonAddQuantity.bind(this);\n  }\n\n  handlerQty({\n    target\n  }, id) {\n    const {\n      name\n    } = target;\n    const {\n      quantity\n    } = this.state;\n    const {\n      setQuantity\n    } = this.props;\n    const min = quantity === 1 && name === 'sub';\n    const value = name === 'add' ? quantity + 1 : quantity - 1;\n    this.setState({\n      quantity: min ? 1 : value\n    }, () => {\n      const {\n        state\n      } = this;\n      setQuantity(state.quantity, id);\n    });\n  }\n\n  renderButtonAddQuantity() {\n    const {\n      availableQuantity,\n      id\n    } = this.props;\n    const {\n      quantity\n    } = this.state;\n\n    if (quantity === availableQuantity) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: event => this.handlerQty(event, id),\n        name: \"add\",\n        \"data-testid\": \"product-increase-quantity\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, \"+\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: event => this.handlerQty(event, id),\n      name: \"add\",\n      \"data-testid\": \"product-increase-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, \"+\");\n  }\n\n  render() {\n    const {\n      title,\n      thumbnail,\n      price,\n      removeItem,\n      id\n    } = this.props;\n    const {\n      quantity\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => removeItem(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Remove\"), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"shopping-cart-product-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnail,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, `R$: ${price.toFixed(2) * quantity}`), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: event => this.handlerQty(event, id),\n      name: \"sub\",\n      \"data-testid\": \"product-decrease-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"shopping-cart-product-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, quantity), this.renderButtonAddQuantity());\n  }\n\n}\n\nCartItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n  quantity: PropTypes.number.isRequired,\n  removeItem: PropTypes.func.isRequired,\n  availableQuantity: PropTypes.number.isRequired\n};\nexport default CartItem;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/CartItem.js"],"names":["React","PropTypes","CartItem","Component","constructor","props","state","quantity","handlerQty","bind","renderButtonAddQuantity","target","id","name","setQuantity","min","value","setState","availableQuantity","event","render","title","thumbnail","price","removeItem","toFixed","propTypes","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CartItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quantity: props.quantity,\n    };\n    this.handlerQty = this.handlerQty.bind(this);\n    this.renderButtonAddQuantity = this.renderButtonAddQuantity.bind(this);\n  }\n\n  handlerQty({ target }, id) {\n    const { name } = target;\n    const { quantity } = this.state;\n    const { setQuantity } = this.props;\n    const min = quantity === 1 && name === 'sub';\n    const value = name === 'add' ? quantity + 1 : quantity - 1;\n    this.setState({ quantity: min ? 1 : value }, () => {\n      const { state } = this;\n      setQuantity(state.quantity, id);\n    });\n  }\n\n  renderButtonAddQuantity() {\n    const { availableQuantity, id } = this.props;\n    const { quantity } = this.state;\n    if (quantity === availableQuantity) {\n      return (\n        <button\n          type=\"button\"\n          onClick={ (event) => this.handlerQty(event, id) }\n          name=\"add\"\n          data-testid=\"product-increase-quantity\"\n          disabled\n        >\n          +\n        </button>);\n    }\n    return (\n      <button\n        type=\"button\"\n        onClick={ (event) => this.handlerQty(event, id) }\n        name=\"add\"\n        data-testid=\"product-increase-quantity\"\n      >\n        +\n      </button>);\n  }\n\n  render() {\n    const { title, thumbnail, price, removeItem, id } = this.props;\n    const { quantity } = this.state;\n    return (\n      <div className=\"card\">\n        <button type=\"button\" onClick={ () => removeItem(id) }>\n          Remove\n        </button>\n        <h3 data-testid=\"shopping-cart-product-name\">\n          { title }\n        </h3>\n        <img src={ thumbnail } alt={ title } />\n        <p>{ `R$: ${price.toFixed(2) * quantity}` }</p>\n        <button\n          type=\"button\"\n          onClick={ (event) => this.handlerQty(event, id) }\n          name=\"sub\"\n          data-testid=\"product-decrease-quantity\"\n        >\n          -\n        </button>\n        <span\n          data-testid=\"shopping-cart-product-quantity\"\n        >\n          { quantity }\n        </span>\n        { this.renderButtonAddQuantity() }\n      </div>\n    );\n  }\n}\n\nCartItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n  quantity: PropTypes.number.isRequired,\n  removeItem: PropTypes.func.isRequired,\n  availableQuantity: PropTypes.number.isRequired,\n};\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}