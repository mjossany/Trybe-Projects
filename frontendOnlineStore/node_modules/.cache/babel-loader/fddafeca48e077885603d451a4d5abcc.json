{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/RatingArea.js\";\nimport React from 'react';\nimport RateCard from './RateCard';\nconst initialState = {\n  email: '',\n  rateValue: 0,\n  message: ''\n};\nconst ratesArray = [];\nexport default class RatingArea extends React.Component {\n  constructor() {\n    super();\n    this.getRate = this.getRate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderRateCard = this.renderRateCard.bind(this);\n    this.state = {\n      email: '',\n      rateValue: 0,\n      message: ''\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  getRate() {\n    const {\n      email,\n      message,\n      rateValue\n    } = this.state;\n    ratesArray.push({\n      email,\n      message,\n      rateValue\n    });\n    this.setState(initialState);\n  }\n\n  renderRateCard() {\n    return ratesArray.map(({\n      email,\n      rateValue,\n      message\n    }) => /*#__PURE__*/React.createElement(RateCard, {\n      key: email,\n      email: email,\n      rateValue: rateValue,\n      message: message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 58\n      }\n    }));\n  }\n\n  renderForm() {\n    const {\n      email,\n      message,\n      rateValue\n    } = this.state;\n    const {\n      handleChange\n    } = this;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      value: email,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Nota\", /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"D\\xEA a avalia\\xE7\\xE3o do filme\",\n      type: \"number\",\n      step: 0.5,\n      min: 0,\n      max: 5,\n      name: \"rateValue\",\n      value: rateValue,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      \"data-testid\": \"product-detail-evaluation\",\n      placeholder: \"Mensagem (Opcional)\",\n      name: \"message\",\n      value: message,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"rating-button\",\n      onClick: this.getRate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Avaliar\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, this.renderForm(), this.renderRateCard());\n  }\n\n}","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/frontendOnlineStore/sd-12-project-frontend-online-store/src/Components/RatingArea.js"],"names":["React","RateCard","initialState","email","rateValue","message","ratesArray","RatingArea","Component","constructor","getRate","bind","handleChange","renderForm","renderRateCard","state","target","name","value","setState","push","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport RateCard from './RateCard';\n\nconst initialState = {\n  email: '',\n  rateValue: 0,\n  message: '',\n};\n\nconst ratesArray = [];\n\nexport default class RatingArea extends React.Component {\n  constructor() {\n    super();\n    this.getRate = this.getRate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderRateCard = this.renderRateCard.bind(this);\n    this.state = {\n      email: '',\n      rateValue: 0,\n      message: '',\n    };\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  getRate() {\n    const { email, message, rateValue } = this.state;\n    ratesArray.push({ email, message, rateValue });\n    this.setState(initialState);\n  }\n\n  renderRateCard() {\n    return (\n      ratesArray.map(({ email, rateValue, message }) => (<RateCard\n        key={ email }\n        email={ email }\n        rateValue={ rateValue }\n        message={ message }\n      />))\n    );\n  }\n\n  renderForm() {\n    const { email, message, rateValue } = this.state;\n    const { handleChange } = this;\n    return (\n      <form>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={ email }\n          onChange={ handleChange }\n        />\n        <label htmlFor=\"rating\">\n          Nota\n          <input\n            placeholder=\"Dê a avaliação do filme\"\n            type=\"number\"\n            step={ 0.5 }\n            min={ 0 }\n            max={ 5 }\n            name=\"rateValue\"\n            value={ rateValue }\n            onChange={ handleChange }\n          />\n        </label>\n        <textarea\n          data-testid=\"product-detail-evaluation\"\n          placeholder=\"Mensagem (Opcional)\"\n          name=\"message\"\n          value={ message }\n          onChange={ handleChange }\n        />\n        <button\n          type=\"button\"\n          className=\"rating-button\"\n          onClick={ this.getRate }\n        >\n          Avaliar\n        </button>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderForm()}\n        {this.renderRateCard()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}