{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/components/Question/NextQuestionBtn.js\";\nimport React, { Component } from 'react';\nimport { func, string, number } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { nextQuestion } from '../../actions';\nimport saveInfoLocalStorage from '../../functions/saveInfoLocalStorage';\nimport Button from '../Feedback/Button';\nimport saveRankLocalStorage from '../../functions/saveRankLocalStorage';\n\nclass NextQuestionBtn extends Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          email = _this$props.email,\n          score = _this$props.score,\n          assertions = _this$props.assertions;\n    saveInfoLocalStorage(name, email, score, assertions);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          changeQuestionNumber = _this$props2.changeQuestionNumber,\n          startTimer = _this$props2.startTimer,\n          questionNumber = _this$props2.questionNumber;\n    const _this$props3 = this.props,\n          name = _this$props3.name,\n          email = _this$props3.email,\n          score = _this$props3.score;\n    const maxQuestion = 4;\n\n    if (questionNumber === maxQuestion) {\n      saveRankLocalStorage(name, email, score);\n      return React.createElement(Button, {\n        testId: \"btn-next\",\n        label: \"Pr\\xF3xima\",\n        link: \"/feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-next\",\n      onClick: () => {\n        changeQuestionNumber();\n        startTimer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Pr\\xF3xima\");\n  }\n\n}\n\nNextQuestionBtn.propTypes = {\n  changeQuestionNumber: func.isRequired,\n  startTimer: func.isRequired,\n  name: string.isRequired,\n  email: string.isRequired,\n  score: number.isRequired,\n  assertions: number.isRequired,\n  questionNumber: number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.questions.score,\n  assertions: state.questions.assertions,\n  questionNumber: state.questions.questionNumber\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeQuestionNumber: () => dispatch(nextQuestion())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextQuestionBtn);","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/components/Question/NextQuestionBtn.js"],"names":["React","Component","func","string","number","connect","nextQuestion","saveInfoLocalStorage","Button","saveRankLocalStorage","NextQuestionBtn","componentDidMount","props","name","email","score","assertions","render","changeQuestionNumber","startTimer","questionNumber","maxQuestion","propTypes","isRequired","mapStateToProps","state","player","gravatarEmail","questions","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,YAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;;AAEA,MAAMC,eAAN,SAA8BT,SAA9B,CAAwC;AACtCU,EAAAA,iBAAiB,GAAG;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACVC,IADU,eACVA,IADU;AAAA,UACJC,KADI,eACJA,KADI;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,UADV,eACUA,UADV;AAElBT,IAAAA,oBAAoB,CAACM,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqBC,UAArB,CAApB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBACsD,KAAKL,KAD3D;AAAA,UACCM,oBADD,gBACCA,oBADD;AAAA,UACuBC,UADvB,gBACuBA,UADvB;AAAA,UACmCC,cADnC,gBACmCA,cADnC;AAAA,yBAEwB,KAAKR,KAF7B;AAAA,UAECC,IAFD,gBAECA,IAFD;AAAA,UAEOC,KAFP,gBAEOA,KAFP;AAAA,UAEcC,KAFd,gBAEcA,KAFd;AAGP,UAAMM,WAAW,GAAG,CAApB;;AACA,QAAID,cAAc,KAAKC,WAAvB,EAAoC;AAClCZ,MAAAA,oBAAoB,CAACI,IAAD,EAAOC,KAAP,EAAcC,KAAd,CAApB;AACA,aACE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAC,UADT;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,IAAI,EAAC,WAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;AACD,WACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,UAFd;AAGE,MAAA,OAAO,EAAG,MAAM;AAAEG,QAAAA,oBAAoB;AAAIC,QAAAA,UAAU;AAAK,OAH3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AASD;;AA7BqC;;AAgCxCT,eAAe,CAACY,SAAhB,GAA4B;AAC1BJ,EAAAA,oBAAoB,EAAEhB,IAAI,CAACqB,UADD;AAE1BJ,EAAAA,UAAU,EAAEjB,IAAI,CAACqB,UAFS;AAG1BV,EAAAA,IAAI,EAAEV,MAAM,CAACoB,UAHa;AAI1BT,EAAAA,KAAK,EAAEX,MAAM,CAACoB,UAJY;AAK1BR,EAAAA,KAAK,EAAEX,MAAM,CAACmB,UALY;AAM1BP,EAAAA,UAAU,EAAEZ,MAAM,CAACmB,UANO;AAO1BH,EAAAA,cAAc,EAAEhB,MAAM,CAACmB;AAPG,CAA5B;;AAUA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,IAAI,EAAEY,KAAK,CAACC,MAAN,CAAab,IADe;AAElCC,EAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaC,aAFc;AAGlCZ,EAAAA,KAAK,EAAEU,KAAK,CAACG,SAAN,CAAgBb,KAHW;AAIlCC,EAAAA,UAAU,EAAES,KAAK,CAACG,SAAN,CAAgBZ,UAJM;AAKlCI,EAAAA,cAAc,EAAEK,KAAK,CAACG,SAAN,CAAgBR;AALE,CAAZ,CAAxB;;AAQA,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,oBAAoB,EAAE,MAAMY,QAAQ,CAACxB,YAAY,EAAb;AADI,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACmB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnB,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { func, string, number } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { nextQuestion } from '../../actions';\nimport saveInfoLocalStorage from '../../functions/saveInfoLocalStorage';\nimport Button from '../Feedback/Button';\nimport saveRankLocalStorage from '../../functions/saveRankLocalStorage';\n\nclass NextQuestionBtn extends Component {\n  componentDidMount() {\n    const { name, email, score, assertions } = this.props;\n    saveInfoLocalStorage(name, email, score, assertions);\n  }\n\n  render() {\n    const { changeQuestionNumber, startTimer, questionNumber } = this.props;\n    const { name, email, score } = this.props;\n    const maxQuestion = 4;\n    if (questionNumber === maxQuestion) {\n      saveRankLocalStorage(name, email, score);\n      return (\n        <Button\n          testId=\"btn-next\"\n          label=\"Próxima\"\n          link=\"/feedback\"\n        />\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        data-testid=\"btn-next\"\n        onClick={ () => { changeQuestionNumber(); startTimer(); } }\n      >\n        Próxima\n      </button>\n    );\n  }\n}\n\nNextQuestionBtn.propTypes = {\n  changeQuestionNumber: func.isRequired,\n  startTimer: func.isRequired,\n  name: string.isRequired,\n  email: string.isRequired,\n  score: number.isRequired,\n  assertions: number.isRequired,\n  questionNumber: number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.questions.score,\n  assertions: state.questions.assertions,\n  questionNumber: state.questions.questionNumber,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeQuestionNumber: () => dispatch(nextQuestion()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextQuestionBtn);\n"]},"metadata":{},"sourceType":"module"}