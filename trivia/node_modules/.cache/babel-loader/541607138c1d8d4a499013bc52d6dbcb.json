{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/components/Question/QuestionAnswers.js\";\nimport React, { Component } from 'react';\nimport { string, arrayOf, bool, func, number } from 'prop-types';\nimport { connect } from 'react-redux';\nimport randomize from '../../functions/randomize';\nimport NextQuestionBtn from './NextQuestionBtn';\nimport { setAnsweredTrue, setAnsweredTrueCorrect } from '../../actions';\n\nclass QuestionAnswers extends Component {\n  render() {\n    const _this$props = this.props,\n          startTimer = _this$props.startTimer,\n          correctAnswer = _this$props.correctAnswer,\n          wrongAnswers = _this$props.wrongAnswers,\n          answered = _this$props.answered,\n          timerState = _this$props.timerState;\n    const allAnswers = [...wrongAnswers.map((answer, index) => ({\n      correct: false,\n      answer,\n      index,\n      isCorrect: 'wrong-answer'\n    })), {\n      correct: true,\n      answer: correctAnswer,\n      isCorrect: 'correct-answer'\n    }];\n    const randomIndex = randomize(allAnswers.length, allAnswers.length - 1);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, randomIndex.map(numb => {\n      const _allAnswers$numb = allAnswers[numb],\n            correct = _allAnswers$numb.correct,\n            answer = _allAnswers$numb.answer,\n            i = _allAnswers$numb.index,\n            isCorrect = _allAnswers$numb.isCorrect;\n      return React.createElement(\"button\", {\n        type: \"button\",\n        key: answer,\n        \"data-testid\": correct ? 'correct-answer' : `wrong-answer-${i}`,\n        disabled: answered,\n        onClick: () => setAnsweredTrueCorrect(timerState),\n        className: answered ? isCorrect : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, answer);\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, answered && React.createElement(NextQuestionBtn, {\n      startTimer: startTimer,\n      handleAnswered: this.handleAnswered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  answeredTrue: () => dispatch(setAnsweredTrue())\n});\n\nconst mapStateToProps = ({\n  questions\n}) => ({\n  answered: questions.answered\n});\n\nQuestionAnswers.propTypes = {\n  correctAnswer: string.isRequired,\n  wrongAnswers: arrayOf(string).isRequired,\n  answered: bool.isRequired,\n  // answeredTrue: func.isRequired,\n  startTimer: func.isRequired,\n  timerState: number.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionAnswers);","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/components/Question/QuestionAnswers.js"],"names":["React","Component","string","arrayOf","bool","func","number","connect","randomize","NextQuestionBtn","setAnsweredTrue","setAnsweredTrueCorrect","QuestionAnswers","render","props","startTimer","correctAnswer","wrongAnswers","answered","timerState","allAnswers","map","answer","index","correct","isCorrect","randomIndex","length","numb","i","handleAnswered","mapDispatchToProps","dispatch","answeredTrue","mapStateToProps","questions","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { string, arrayOf, bool, func, number } from 'prop-types';\nimport { connect } from 'react-redux';\nimport randomize from '../../functions/randomize';\nimport NextQuestionBtn from './NextQuestionBtn';\nimport { setAnsweredTrue, setAnsweredTrueCorrect } from '../../actions';\n\nclass QuestionAnswers extends Component {\n  render() {\n    const {\n      startTimer,\n      correctAnswer,\n      wrongAnswers,\n      answered,\n      // answeredTrue,\n      timerState,\n    } = this.props;\n    const allAnswers = [...wrongAnswers\n      .map((answer, index) => ({\n        correct: false, answer, index, isCorrect: 'wrong-answer',\n      })),\n    { correct: true, answer: correctAnswer, isCorrect: 'correct-answer' },\n    ];\n    const randomIndex = randomize(allAnswers.length, allAnswers.length - 1);\n    return (\n      <div>\n        <div>\n          {randomIndex.map((numb) => {\n            const { correct, answer, index: i, isCorrect } = allAnswers[numb];\n            return (\n              <button\n                type=\"button\"\n                key={ answer }\n                data-testid={ correct ? 'correct-answer' : `wrong-answer-${i}` }\n                disabled={ answered }\n                onClick={ () => setAnsweredTrueCorrect(timerState) }\n                className={ answered ? isCorrect : '' }\n              >\n                {answer}\n              </button>\n            );\n          })}\n        </div>\n        <div>\n          {\n            answered\n            && <NextQuestionBtn\n              startTimer={ startTimer }\n              handleAnswered={ this.handleAnswered }\n            />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  answeredTrue: () => dispatch(setAnsweredTrue()),\n});\n\nconst mapStateToProps = ({ questions }) => ({\n  answered: questions.answered,\n});\n\nQuestionAnswers.propTypes = {\n  correctAnswer: string.isRequired,\n  wrongAnswers: arrayOf(string).isRequired,\n  answered: bool.isRequired,\n  // answeredTrue: func.isRequired,\n  startTimer: func.isRequired,\n  timerState: number.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionAnswers);\n"]},"metadata":{},"sourceType":"module"}