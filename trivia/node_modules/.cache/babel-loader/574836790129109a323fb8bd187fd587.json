{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport { arrayOf, objectOf, number } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Feed, Hits, TotalScore } from '../components/Feedback';\nimport { PlayerImg, PlayerName, Score } from '../components/Header';\n\nclass Feedback extends Component {\n  render() {\n    const _this$props = this.props,\n          getQuestions = _this$props.getQuestions,\n          getAssertions = _this$props.getAssertions,\n          getScore = _this$props.getScore;\n    const assertions = getAssertions; // Pegar valor do stado global ou na localStorage n達o tenho certeza;\n\n    const totalScore = getScore; // Pegar valor do stado global ou na localStorage n達o tenho certeza;\n\n    const qntQuestions = getQuestions.length;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Feedback\"), React.createElement(PlayerImg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(PlayerName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(Score, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Feed, {\n      assertions: assertions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(TotalScore, {\n      totalScore: totalScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Hits, {\n      assertions: assertions,\n      qntQuestions: qntQuestions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Button, {\n      link: \"/\",\n      testId: \"btn-play-again\",\n      label: \"Jogar novamente\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Button, {\n      link: \"/ranking\",\n      testId: \"btn-ranking\",\n      label: \"Ver Ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  questions\n}) => ({\n  getQuestions: questions.questions,\n  answered: questions.answered,\n  getScore: questions.score,\n  getAssertions: questions.assertions\n});\n\nFeedback.propTypes = {\n  getQuestions: arrayOf(objectOf).isRequired,\n  getScore: number.isRequired,\n  getAssertions: number.isRequired\n};\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/pages/Feedback.js"],"names":["React","Component","arrayOf","objectOf","number","connect","Button","Feed","Hits","TotalScore","PlayerImg","PlayerName","Score","Feedback","render","props","getQuestions","getAssertions","getScore","assertions","totalScore","qntQuestions","length","mapStateToProps","questions","answered","score","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,MAA5B,QAA0C,YAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,UAA7B,QAA+C,wBAA/C;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,KAAhC,QAA6C,sBAA7C;;AAEA,MAAMC,QAAN,SAAuBZ,SAAvB,CAAiC;AAC/Ba,EAAAA,MAAM,GAAG;AAAA,wBAC2C,KAAKC,KADhD;AAAA,UACCC,YADD,eACCA,YADD;AAAA,UACeC,aADf,eACeA,aADf;AAAA,UAC8BC,QAD9B,eAC8BA,QAD9B;AAEP,UAAMC,UAAU,GAAGF,aAAnB,CAFO,CAE2B;;AAClC,UAAMG,UAAU,GAAGF,QAAnB,CAHO,CAGsB;;AAC7B,UAAMG,YAAY,GAAGL,YAAY,CAACM,MAAlC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,UAAU,EAAGH,UADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAGC,UADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAOE,oBAAC,IAAD;AACE,MAAA,UAAU,EAAGD,UADf;AAEE,MAAA,YAAY,EAAGE,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAWE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,MAAM,EAAC,gBAFT;AAGE,MAAA,KAAK,EAAC,iBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAgBE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,MAAM,EAAC,aAFT;AAGE,MAAA,KAAK,EAAC,aAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CAPF,CADF;AAgCD;;AAtC8B;;AAyCjC,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAoB;AAC1CR,EAAAA,YAAY,EAAEQ,SAAS,CAACA,SADkB;AAE1CC,EAAAA,QAAQ,EAAED,SAAS,CAACC,QAFsB;AAG1CP,EAAAA,QAAQ,EAAEM,SAAS,CAACE,KAHsB;AAI1CT,EAAAA,aAAa,EAAEO,SAAS,CAACL;AAJiB,CAApB,CAAxB;;AAOAN,QAAQ,CAACc,SAAT,GAAqB;AACnBX,EAAAA,YAAY,EAAEd,OAAO,CAACC,QAAD,CAAP,CAAkByB,UADb;AAEnBV,EAAAA,QAAQ,EAAEd,MAAM,CAACwB,UAFE;AAGnBX,EAAAA,aAAa,EAAEb,MAAM,CAACwB;AAHH,CAArB;AAMA,eAAevB,OAAO,CAACkB,eAAD,CAAP,CAAyBV,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { arrayOf, objectOf, number } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Feed, Hits, TotalScore } from '../components/Feedback';\nimport { PlayerImg, PlayerName, Score } from '../components/Header';\n\nclass Feedback extends Component {\n  render() {\n    const { getQuestions, getAssertions, getScore } = this.props;\n    const assertions = getAssertions; // Pegar valor do stado global ou na localStorage n達o tenho certeza;\n    const totalScore = getScore; // Pegar valor do stado global ou na localStorage n達o tenho certeza;\n    const qntQuestions = getQuestions.length;\n    return (\n      <div>\n        <header>\n          <h1>Feedback</h1>\n          <PlayerImg />\n          <PlayerName />\n          <Score />\n        </header>\n        <main>\n          <Feed\n            assertions={ assertions }\n          />\n          <TotalScore\n            totalScore={ totalScore }\n          />\n          <Hits\n            assertions={ assertions }\n            qntQuestions={ qntQuestions }\n          />\n          <Button\n            link=\"/\"\n            testId=\"btn-play-again\"\n            label=\"Jogar novamente\"\n          />\n          <Button\n            link=\"/ranking\"\n            testId=\"btn-ranking\"\n            label=\"Ver Ranking\"\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ questions }) => ({\n  getQuestions: questions.questions,\n  answered: questions.answered,\n  getScore: questions.score,\n  getAssertions: questions.assertions,\n});\n\nFeedback.propTypes = {\n  getQuestions: arrayOf(objectOf).isRequired,\n  getScore: number.isRequired,\n  getAssertions: number.isRequired,\n};\n\nexport default connect(mapStateToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}