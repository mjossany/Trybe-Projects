{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/components/Question/NextQuestionBtn.js\";\nimport React, { Component } from 'react';\nimport { func, string, number } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { nextQuestion } from '../../actions';\nimport saveInfoLocalStorage from '../../functions/saveInfoLocalStorage';\n\nclass NextQuestionBtn extends Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          email = _this$props.email,\n          score = _this$props.score,\n          assertions = _this$props.assertions;\n    saveInfoLocalStorage(name, email, score, assertions);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          changeQuestionNumber = _this$props2.changeQuestionNumber,\n          startTimer = _this$props2.startTimer,\n          questionNumber = _this$props2.questionNumber;\n\n    if (questionNumber === 4) {\n      return React.createElement(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"btn-next\",\n        onClick: () => {\n          changeQuestionNumber();\n          startTimer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Pr\\xF3xima\");\n    }\n\n    React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Pr\\xF3xima\");\n  }\n\n}\n\nNextQuestionBtn.propTypes = {\n  changeQuestionNumber: func.isRequired,\n  startTimer: func.isRequired,\n  name: string.isRequired,\n  email: string.isRequired,\n  score: number.isRequired,\n  assertions: number.isRequired,\n  questionNumber: number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.questions.score,\n  assertions: state.questions.assertions,\n  questionNumber: state.questions.questionNumber\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeQuestionNumber: () => dispatch(nextQuestion())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextQuestionBtn);","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/components/Question/NextQuestionBtn.js"],"names":["React","Component","func","string","number","connect","nextQuestion","saveInfoLocalStorage","NextQuestionBtn","componentDidMount","props","name","email","score","assertions","render","changeQuestionNumber","startTimer","questionNumber","propTypes","isRequired","mapStateToProps","state","player","gravatarEmail","questions","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,YAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;;AAEA,MAAMC,eAAN,SAA8BP,SAA9B,CAAwC;AACtCQ,EAAAA,iBAAiB,GAAG;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACVC,IADU,eACVA,IADU;AAAA,UACJC,KADI,eACJA,KADI;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,UADV,eACUA,UADV;AAElBP,IAAAA,oBAAoB,CAACI,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqBC,UAArB,CAApB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBACsD,KAAKL,KAD3D;AAAA,UACCM,oBADD,gBACCA,oBADD;AAAA,UACuBC,UADvB,gBACuBA,UADvB;AAAA,UACmCC,cADnC,gBACmCA,cADnC;;AAEP,QAAIA,cAAc,KAAK,CAAvB,EAA0B;AACxB,aACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,uBAAY,UAFd;AAGE,QAAA,OAAO,EAAG,MAAM;AAAEF,UAAAA,oBAAoB;AAAIC,UAAAA,UAAU;AAAK,SAH3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AASD;;AACC;AACA,MAAA,IAAI,EAAC,QADL;AAEA,qBAAY,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAzBqC;;AA4BxCT,eAAe,CAACW,SAAhB,GAA4B;AAC1BH,EAAAA,oBAAoB,EAAEd,IAAI,CAACkB,UADD;AAE1BH,EAAAA,UAAU,EAAEf,IAAI,CAACkB,UAFS;AAG1BT,EAAAA,IAAI,EAAER,MAAM,CAACiB,UAHa;AAI1BR,EAAAA,KAAK,EAAET,MAAM,CAACiB,UAJY;AAK1BP,EAAAA,KAAK,EAAET,MAAM,CAACgB,UALY;AAM1BN,EAAAA,UAAU,EAAEV,MAAM,CAACgB,UANO;AAO1BF,EAAAA,cAAc,EAAEd,MAAM,CAACgB;AAPG,CAA5B;;AAUA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACC,MAAN,CAAaZ,IADe;AAElCC,EAAAA,KAAK,EAAEU,KAAK,CAACC,MAAN,CAAaC,aAFc;AAGlCX,EAAAA,KAAK,EAAES,KAAK,CAACG,SAAN,CAAgBZ,KAHW;AAIlCC,EAAAA,UAAU,EAAEQ,KAAK,CAACG,SAAN,CAAgBX,UAJM;AAKlCI,EAAAA,cAAc,EAAEI,KAAK,CAACG,SAAN,CAAgBP;AALE,CAAZ,CAAxB;;AAQA,MAAMQ,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,oBAAoB,EAAE,MAAMW,QAAQ,CAACrB,YAAY,EAAb;AADI,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ClB,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { func, string, number } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { nextQuestion } from '../../actions';\nimport saveInfoLocalStorage from '../../functions/saveInfoLocalStorage';\n\nclass NextQuestionBtn extends Component {\n  componentDidMount() {\n    const { name, email, score, assertions } = this.props;\n    saveInfoLocalStorage(name, email, score, assertions);\n  }\n\n  render() {\n    const { changeQuestionNumber, startTimer, questionNumber } = this.props;\n    if (questionNumber === 4) {\n      return (\n        <button\n          type=\"button\"\n          data-testid=\"btn-next\"\n          onClick={ () => { changeQuestionNumber(); startTimer(); } }\n        >\n          Próxima\n        </button>\n      );\n    }\n      <button\n      type=\"button\"\n      data-testid=\"btn-next\"\n    >\n      Próxima\n    </button>;\n  }\n}\n\nNextQuestionBtn.propTypes = {\n  changeQuestionNumber: func.isRequired,\n  startTimer: func.isRequired,\n  name: string.isRequired,\n  email: string.isRequired,\n  score: number.isRequired,\n  assertions: number.isRequired,\n  questionNumber: number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.questions.score,\n  assertions: state.questions.assertions,\n  questionNumber: state.questions.questionNumber,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeQuestionNumber: () => dispatch(nextQuestion()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextQuestionBtn);\n"]},"metadata":{},"sourceType":"module"}