{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport { arrayOf, objectOf, number, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Feed, Hits, TotalScore } from '../components/Feedback';\nimport { PlayerImg, PlayerName, Score } from '../components/Header';\nimport { setReset } from '../actions';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.goHome = this.goHome.bind(this);\n  }\n\n  goHome() {\n    const _this$props = this.props,\n          reset = _this$props.reset,\n          history = _this$props.history;\n    reset();\n    history.push('/');\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          getQuestions = _this$props2.getQuestions,\n          getAssertions = _this$props2.getAssertions,\n          getScore = _this$props2.getScore;\n    const assertions = getAssertions;\n    const totalScore = getScore;\n    const qntQuestions = getQuestions.length;\n    return React.createElement(\"div\", {\n      className: \"feedback-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Feedback\")), React.createElement(PlayerImg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"player-name-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(PlayerName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"feedback-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Score, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Feed, {\n      assertions: assertions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(TotalScore, {\n      totalScore: totalScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Hits, {\n      assertions: assertions,\n      qntQuestions: qntQuestions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.goHome,\n      testId: \"btn-play-again\",\n      label: \"Jogar novamente\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Button, {\n      link: \"/ranking\",\n      testId: \"btn-ranking\",\n      label: \"Ver Ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  questions\n}) => ({\n  getQuestions: questions.questions,\n  answered: questions.answered,\n  getScore: questions.score,\n  getAssertions: questions.assertions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  reset: () => dispatch(setReset())\n});\n\nFeedback.propTypes = {\n  getQuestions: arrayOf(objectOf).isRequired,\n  getScore: number.isRequired,\n  getAssertions: number.isRequired,\n  history: shape({\n    push: func\n  }).isRequired,\n  reset: func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/trivia/sd-012-project-trivia-react-redux/src/pages/Feedback.js"],"names":["React","Component","arrayOf","objectOf","number","func","shape","connect","Button","Feed","Hits","TotalScore","PlayerImg","PlayerName","Score","setReset","Feedback","constructor","props","goHome","bind","reset","history","push","render","getQuestions","getAssertions","getScore","assertions","totalScore","qntQuestions","length","mapStateToProps","questions","answered","score","mapDispatchToProps","dispatch","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { arrayOf, objectOf, number, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Feed, Hits, TotalScore } from '../components/Feedback';\nimport { PlayerImg, PlayerName, Score } from '../components/Header';\nimport { setReset } from '../actions';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.goHome = this.goHome.bind(this);\n  }\n\n  goHome() {\n    const { reset, history } = this.props;\n    reset();\n    history.push('/');\n  }\n\n  render() {\n    const { getQuestions, getAssertions, getScore } = this.props;\n    const assertions = getAssertions;\n    const totalScore = getScore;\n    const qntQuestions = getQuestions.length;\n    return (\n      <div\n        className=\"feedback-container\"\n      >\n        <header>\n          <div\n            className=\"feedback\"\n          >\n            <h1>Feedback</h1>\n          </div>\n          <PlayerImg />\n          <div className=\"player-name-feedback\">\n            <PlayerName />\n          </div>\n          <div\n            className=\"feedback-score\"\n          >\n            <Score />\n          </div>\n        </header>\n        <main>\n          <Feed\n            assertions={ assertions }\n          />\n          <TotalScore\n            totalScore={ totalScore }\n          />\n          <Hits\n            assertions={ assertions }\n            qntQuestions={ qntQuestions }\n          />\n          <Button\n            onClick={ this.goHome }\n            testId=\"btn-play-again\"\n            label=\"Jogar novamente\"\n          />\n          <Button\n            link=\"/ranking\"\n            testId=\"btn-ranking\"\n            label=\"Ver Ranking\"\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ questions }) => ({\n  getQuestions: questions.questions,\n  answered: questions.answered,\n  getScore: questions.score,\n  getAssertions: questions.assertions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(setReset()),\n});\n\nFeedback.propTypes = {\n  getQuestions: arrayOf(objectOf).isRequired,\n  getScore: number.isRequired,\n  getAssertions: number.isRequired,\n  history: shape({\n    push: func,\n  }).isRequired,\n  reset: func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}