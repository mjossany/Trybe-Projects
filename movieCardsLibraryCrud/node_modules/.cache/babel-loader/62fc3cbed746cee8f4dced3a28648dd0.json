{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/movieCardsLibraryCrud/sd-012-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    this.fetchMovie(id);\n  }\n\n  async fetchMovie(id) {\n    const requestResponse = await movieAPI.getMovie(id);\n    console.log(requestResponse);\n    this.setState({\n      movie: requestResponse,\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = {};\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, loading && /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, `Rating: ${rating}`));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default MovieDetails;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/movieCardsLibraryCrud/sd-012-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","PropTypes","movieAPI","Loading","MovieDetails","constructor","state","movie","loading","componentDidMount","match","params","id","props","fetchMovie","requestResponse","getMovie","console","log","setState","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AACA,SAAKC,UAAL,CAAgBF,EAAhB;AACD;;AAEe,QAAVE,UAAU,CAACF,EAAD,EAAK;AACnB,UAAMG,eAAe,GAAG,MAAMb,QAAQ,CAACc,QAAT,CAAkBJ,EAAlB,CAA9B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACA,SAAKI,QAAL,CAAc;AACZZ,MAAAA,KAAK,EAAEQ,eADK;AAEZP,MAAAA,OAAO,EAAE;AAFG,KAAd;AAID;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,SAApB;AAA+BC,MAAAA,KAA/B;AAAsCC,MAAAA,MAAtC;AAA8CC,MAAAA;AAA9C,QAA2D,EAAjE;AACA,UAAM;AAAElB,MAAAA;AAAF,QAAc,KAAKF,KAAzB;AAEA,wBACE;AAAK,qBAAY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,OAAO,iBAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd,eAEE;AAAK,MAAA,GAAG,EAAC,aAAT;AAAuB,MAAA,GAAG,EAAI,MAAKe,SAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,aAAYG,QAAS,EAA3B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,cAAaJ,SAAU,EAA7B,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,UAASE,KAAM,EAArB,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,WAAUC,MAAO,EAAvB,CANF,CADF;AAUD;;AArCkC;;AAwCrCrB,YAAY,CAACuB,SAAb,GAAyB;AACvBjB,EAAAA,KAAK,EAAET,SAAS,CAAC2B,KAAV,CAAgB;AACrBjB,IAAAA,MAAM,EAAEV,SAAS,CAAC2B,KAAV,CAAgB;AACtBhB,MAAAA,EAAE,EAAEX,SAAS,CAAC4B,MAAV,CAAiBC;AADC,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALoB,CAAzB;AAQA,eAAe1B,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    this.fetchMovie(id);\n  }\n\n  async fetchMovie(id) {\n    const requestResponse = await movieAPI.getMovie(id);\n    console.log(requestResponse);\n    this.setState({\n      movie: requestResponse,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { title, storyline, imagePath, genre, rating, subtitle } = {};\n    const { loading } = this.state;\n\n    return (\n      <div data-testid=\"movie-details\">\n        {loading && <Loading />}\n        <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n        <p>{ `Subtitle: ${subtitle}` }</p>\n        <p>{ `Storyline: ${storyline}` }</p>\n        <p>{ `Genre: ${genre}` }</p>\n        <p>{ `Rating: ${rating}` }</p>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}