{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/movieCardsLibraryCrud/sd-012-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      status: 'loading',\n      shouldRedirect: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    this.fetchMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie);\n    this.setState({\n      shouldRedirect: true\n    });\n  }\n\n  async fetchMovie(id) {\n    const requestResponse = await movieAPI.getMovie(id);\n    this.setState({\n      movie: requestResponse,\n      status: false\n    });\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (status === 'loading') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default EditMovie;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/movieCardsLibraryCrud/sd-012-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","PropTypes","Loading","MovieForm","movieAPI","EditMovie","constructor","props","state","movie","status","shouldRedirect","handleSubmit","bind","componentDidMount","match","params","id","fetchMovie","updatedMovie","updateMovie","setState","requestResponse","getMovie","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE,SAFG;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKV,KAA3C;AACA,SAAKW,UAAL,CAAgBD,EAAhB;AACD;;AAEDL,EAAAA,YAAY,CAACO,YAAD,EAAe;AACzBf,IAAAA,QAAQ,CAACgB,WAAT,CAAqBD,YAArB;AACA,SAAKE,QAAL,CAAc;AACZV,MAAAA,cAAc,EAAE;AADJ,KAAd;AAGD;;AAEe,QAAVO,UAAU,CAACD,EAAD,EAAK;AACnB,UAAMK,eAAe,GAAG,MAAMlB,QAAQ,CAACmB,QAAT,CAAkBN,EAAlB,CAA9B;AACA,SAAKI,QAAL,CAAc;AACZZ,MAAAA,KAAK,EAAEa,eADK;AAEZZ,MAAAA,MAAM,EAAE;AAFI,KAAd;AAID;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,MAAF;AAAUC,MAAAA,cAAV;AAA0BF,MAAAA;AAA1B,QAAoC,KAAKD,KAA/C;;AACA,QAAIG,cAAJ,EAAoB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B;AACxB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGD,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKG,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA9C+B;;AAiDlCP,SAAS,CAACoB,SAAV,GAAsB;AACpBV,EAAAA,KAAK,EAAEd,SAAS,CAACyB,KAAV,CAAgB;AACrBV,IAAAA,MAAM,EAAEf,SAAS,CAACyB,KAAV,CAAgB;AACtBT,MAAAA,EAAE,EAAEhB,SAAS,CAAC0B,MAAV,CAAiBC;AADC,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALiB,CAAtB;AAQA,eAAevB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      status: 'loading',\n      shouldRedirect: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    this.fetchMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie);\n    this.setState({\n      shouldRedirect: true,\n    });\n  }\n\n  async fetchMovie(id) {\n    const requestResponse = await movieAPI.getMovie(id);\n    this.setState({\n      movie: requestResponse,\n      status: false,\n    });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}