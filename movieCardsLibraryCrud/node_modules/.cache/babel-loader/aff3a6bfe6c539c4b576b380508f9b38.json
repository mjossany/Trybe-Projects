{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/movieCardsLibraryCrud/sd-012-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      loading: true\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(updatedMovie) {}\n\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    this.fetchMovie();\n  }\n\n  async fetchMovie(id) {\n    const requestResponse = await movieAPI.getMovie(id);\n    this.setState({\n      movie: requestResponse,\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {// Redirect\n    }\n\n    if (status === 'loading') {\n      /*#__PURE__*/\n      React.createElement(Loadinf, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default EditMovie;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/movieCardsLibraryCrud/sd-012-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","MovieForm","movieAPI","EditMovie","constructor","props","state","movie","loading","handleSubmit","bind","updatedMovie","componentDidMount","match","params","id","fetchMovie","requestResponse","getMovie","setState","render","status","shouldRedirect","propTypes","PropTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,YAAD,EAAe,CAC1B;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKV,KAA3C;AACA,SAAKW,UAAL;AACD;;AAEe,QAAVA,UAAU,CAACD,EAAD,EAAK;AACnB,UAAME,eAAe,GAAG,MAAMf,QAAQ,CAACgB,QAAT,CAAkBH,EAAlB,CAA9B;AACA,SAAKI,QAAL,CAAc;AACZZ,MAAAA,KAAK,EAAEU,eADK;AAEZT,MAAAA,OAAO,EAAE;AAFG,KAAd;AAID;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,cAAV;AAA0Bf,MAAAA;AAA1B,QAAoC,KAAKD,KAA/C;;AACA,QAAIgB,cAAJ,EAAoB,CAClB;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B;AACxB;AAAA,0BAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGd,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKE,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAzC+B;;AA4ClCN,SAAS,CAACoB,SAAV,GAAsB;AACpBV,EAAAA,KAAK,EAAEW,SAAS,CAACC,KAAV,CAAgB;AACrBX,IAAAA,MAAM,EAAEU,SAAS,CAACC,KAAV,CAAgB;AACtBV,MAAAA,EAAE,EAAES,SAAS,CAACE,MAAV,CAAiBC;AADC,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALiB,CAAtB;AAQA,eAAexB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      loading: true,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(updatedMovie) {\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    this.fetchMovie();\n  }\n\n  async fetchMovie(id) {\n    const requestResponse = await movieAPI.getMovie(id);\n    this.setState({\n      movie: requestResponse,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      // Redirect\n    }\n\n    if (status === 'loading') {\n      <Loadinf />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}