{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/movieCardsLibraryCrud/sd-012-project-movie-card-library-crud/src/pages/MovieList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieCard from '../components/MovieCard';\nimport Loading from '../components/Loading';\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      loading: true\n    };\n    this.fetchMovies = this.fetchMovies.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  async fetchMovies() {\n    const requestResponse = await movieAPI.getMovies();\n    this.setState(prevState => ({\n      movies: [...prevState.movies, requestResponse],\n      loading: false\n    }));\n  }\n\n  render() {\n    const {\n      movies,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, loading && /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }), movies.map(movie => /*#__PURE__*/React.createElement(MovieCard, {\n      key: movie.title,\n      movie: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 32\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/movies/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"ADICIONAR CART\\xC3O\"));\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/movieCardsLibraryCrud/sd-012-project-movie-card-library-crud/src/pages/MovieList.js"],"names":["React","Component","Link","MovieCard","Loading","movieAPI","MovieList","constructor","state","movies","loading","fetchMovies","bind","componentDidMount","requestResponse","getMovies","setState","prevState","render","map","movie","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,WAAL;AACD;;AAEgB,QAAXA,WAAW,GAAG;AAClB,UAAMG,eAAe,GAAG,MAAMT,QAAQ,CAACU,SAAT,EAA9B;AACA,SAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BR,MAAAA,MAAM,EAAE,CAAC,GAAGQ,SAAS,CAACR,MAAd,EAAsBK,eAAtB,CADoB;AAE5BJ,MAAAA,OAAO,EAAE;AAFmB,KAAhB,CAAd;AAID;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,KAAKF,KAAjC;AAEA,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,OAAO,iBAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd,EAEGD,MAAM,CAACU,GAAP,CAAYC,KAAD,iBAAW,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAGA,KAAK,CAACC,KAAvB;AAA+B,MAAA,KAAK,EAAGD,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CAFH,eAGE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CADF;AAOD;;AAlC+B;;AAqClC,eAAed,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieCard from '../components/MovieCard';\nimport Loading from '../components/Loading';\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      loading: true,\n    };\n\n    this.fetchMovies = this.fetchMovies.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  async fetchMovies() {\n    const requestResponse = await movieAPI.getMovies();\n    this.setState((prevState) => ({\n      movies: [...prevState.movies, requestResponse],\n      loading: false,\n    }));\n  }\n\n  render() {\n    const { movies, loading } = this.state;\n\n    return (\n      <div data-testid=\"movie-list\">\n        {loading && <Loading />}\n        {movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />)}\n        <Link to=\"/movies/new\">ADICIONAR CART√ÉO</Link>\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}