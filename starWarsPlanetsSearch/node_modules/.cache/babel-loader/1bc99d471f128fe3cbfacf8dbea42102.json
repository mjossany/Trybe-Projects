{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/context/Provider.jsx\";\nimport React from 'react';\nimport Proptypes from 'prop-types';\nimport StarWarsPlanetsContext from './StarWarsPlanetsContext';\nimport useFetchData from '../hooks/useFetchData';\n\nconst Provider = ({\n  children\n}) => {\n  const [state, loading, input, setInput, column, setColumn, comparison, setComparison, value, setValue] = useFetchData();\n  const contextValue = {\n    data: state,\n    filters: {\n      filterByName: {\n        name: input\n      }\n    },\n    loading,\n    setInput,\n    column,\n    setColumn,\n    comparison,\n    setComparison,\n    value,\n    setValue\n  };\n  return /*#__PURE__*/React.createElement(StarWarsPlanetsContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nProvider.propTypes = {\n  children: Proptypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/context/Provider.jsx"],"names":["React","Proptypes","StarWarsPlanetsContext","useFetchData","Provider","children","state","loading","input","setInput","column","setColumn","comparison","setComparison","value","setValue","contextValue","data","filters","filterByName","name","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,QAAM,CACJC,KADI,EACGC,OADH,EACYC,KADZ,EACmBC,QADnB,EAEJC,MAFI,EAEIC,SAFJ,EAEeC,UAFf,EAE2BC,aAF3B,EAE0CC,KAF1C,EAEiDC,QAFjD,IAGFZ,YAAY,EAHhB;AAKA,QAAMa,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAEX,KADa;AAEnBY,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAE;AACZC,QAAAA,IAAI,EAAEZ;AADM;AADP,KAFU;AAOnBD,IAAAA,OAPmB;AAQnBE,IAAAA,QARmB;AASnBC,IAAAA,MATmB;AAUnBC,IAAAA,SAVmB;AAWnBC,IAAAA,UAXmB;AAYnBC,IAAAA,aAZmB;AAanBC,IAAAA,KAbmB;AAcnBC,IAAAA;AAdmB,GAArB;AAiBA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAGC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QADH,CADF;AAKD,CA5BD;;AA8BAD,QAAQ,CAACiB,SAAT,GAAqB;AACnBhB,EAAAA,QAAQ,EAAEJ,SAAS,CAACqB,IAAV,CAAeC;AADN,CAArB;AAIA,eAAenB,QAAf","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types';\nimport StarWarsPlanetsContext from './StarWarsPlanetsContext';\nimport useFetchData from '../hooks/useFetchData';\n\nconst Provider = ({ children }) => {\n  const [\n    state, loading, input, setInput,\n    column, setColumn, comparison, setComparison, value, setValue,\n  ] = useFetchData();\n\n  const contextValue = {\n    data: state,\n    filters: {\n      filterByName: {\n        name: input,\n      },\n    },\n    loading,\n    setInput,\n    column,\n    setColumn,\n    comparison,\n    setComparison,\n    value,\n    setValue,\n  };\n\n  return (\n    <StarWarsPlanetsContext.Provider value={ contextValue }>\n      {children}\n    </StarWarsPlanetsContext.Provider>\n  );\n};\n\nProvider.propTypes = {\n  children: Proptypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}