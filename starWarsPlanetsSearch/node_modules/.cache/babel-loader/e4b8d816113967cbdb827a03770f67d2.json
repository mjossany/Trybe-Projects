{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/components/DisplayScreen/Table/Table.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport Context from '../../../context/Context';\n\nconst Table = () => {\n  const {\n    data,\n    filters: {\n      filterByName: {\n        input\n      } // filterByNumericValue,\n\n    },\n    loading\n  } = useContext(Context);\n\n  const filterByName = planets => {\n    if (planets.length > 0) {\n      return planets.filter(planet => planet.name.includes(input));\n    }\n  };\n\n  const applyFilters = () => filterByName(data);\n\n  useEffect(applyFilters[(data, input)]);\n  if (loading || data.length === 0) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 44\n    }\n  }, \"Loading...\");\n  const keysWithoutResidents = Object.keys(data[0]).filter(key => key !== 'residents');\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, keysWithoutResidents.map(key => /*#__PURE__*/React.createElement(\"th\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 46\n    }\n  }, key)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, data.map(planet => /*#__PURE__*/React.createElement(\"tr\", {\n    key: planet.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, keysWithoutResidents.map(key => /*#__PURE__*/React.createElement(\"td\", {\n    key: planet[key],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, planet[key]))))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/components/DisplayScreen/Table/Table.jsx"],"names":["React","useContext","useEffect","Context","Table","data","filters","filterByName","input","loading","planets","length","filter","planet","name","includes","applyFilters","keysWithoutResidents","Object","keys","key","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAE;AAAEC,QAAAA;AAAF,OADP,CAEP;;AAFO,KAFL;AAMJC,IAAAA;AANI,MAOFR,UAAU,CAACE,OAAD,CAPd;;AASA,QAAMI,YAAY,GAAIG,OAAD,IAAa;AAChC,QAAIA,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAwB;AACtB,aAAOD,OAAO,CAACE,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBP,KAArB,CAA3B,CAAP;AACD;AACF,GAJD;;AAMA,QAAMQ,YAAY,GAAG,MAAMT,YAAY,CAACF,IAAD,CAAvC;;AAEAH,EAAAA,SAAS,CACPc,YAAY,EACTX,IAAI,EAAEG,KADG,EADL,CAAT;AAKA,MAAIC,OAAO,IAAIJ,IAAI,CAACM,MAAL,KAAgB,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAClC,QAAMM,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYd,IAAI,CAAC,CAAD,CAAhB,EAAqBO,MAArB,CAA6BQ,GAAD,IAASA,GAAG,KAAK,WAA7C,CAA7B;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,oBAAoB,CAACI,GAArB,CAA0BD,GAAD,iBAAS;AAAI,IAAA,GAAG,EAAGA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,GAAlB,CAAlC,CADH,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,IAAI,CACFgB,GADF,CACOR,MAAD,iBACH;AAAI,IAAA,GAAG,EAAGA,MAAM,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,oBAAoB,CAACI,GAArB,CAA0BD,GAAD,iBACxB;AAAI,IAAA,GAAG,EAAGP,MAAM,CAACO,GAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,CAACO,GAAD,CADT,CADD,CADH,CAFH,CADH,CANF,CADF;AAqBD,CA/CD;;AAiDA,eAAehB,KAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport Context from '../../../context/Context';\n\nconst Table = () => {\n  const {\n    data,\n    filters: {\n      filterByName: { input },\n      // filterByNumericValue,\n    },\n    loading,\n  } = useContext(Context);\n\n  const filterByName = (planets) => {\n    if (planets.length > 0) {\n      return planets.filter((planet) => planet.name.includes(input));\n    }\n  };\n\n  const applyFilters = () => filterByName(data);\n\n  useEffect(\n    applyFilters\n      [data, input],\n  );\n\n  if (loading || data.length === 0) return <h2>Loading...</h2>;\n  const keysWithoutResidents = Object.keys(data[0]).filter((key) => key !== 'residents');\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {keysWithoutResidents.map((key) => <th key={ key }>{ key }</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {data\n          .map((planet) => (\n            <tr key={ planet.name }>\n              {keysWithoutResidents.map((key) => (\n                <td key={ planet[key] }>\n                  {planet[key]}\n                </td>\n              ))}\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}