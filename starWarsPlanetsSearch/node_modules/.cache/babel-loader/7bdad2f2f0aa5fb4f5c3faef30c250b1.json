{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/context/Provider.jsx\";\nimport React from 'react';\nimport Proptypes from 'prop-types';\nimport StarWarsPlanetsContext from './StarWarsPlanetsContext';\nimport useFetchData from '../hooks/useFetchData';\n\nconst Provider = ({\n  children\n}) => {\n  const [state, stateCopy, loading, input, setInput] = useFetchData();\n  useEffect(() => {\n    const filteredPlanets = stateCopy.filter(planet => planet.name.includes(input));\n    setState(filteredPlanets);\n  }, [input, stateCopy]);\n  const contextValue = {\n    data: state,\n    filters: {\n      filterByName: {\n        name: input\n      },\n      filterByNumericValues: [{\n        column,\n        comparison,\n        value\n      }]\n    },\n    loading,\n    setInput\n  };\n  return /*#__PURE__*/React.createElement(StarWarsPlanetsContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nProvider.propTypes = {\n  children: Proptypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/context/Provider.jsx"],"names":["React","Proptypes","StarWarsPlanetsContext","useFetchData","Provider","children","state","stateCopy","loading","input","setInput","useEffect","filteredPlanets","filter","planet","name","includes","setState","contextValue","data","filters","filterByName","filterByNumericValues","column","comparison","value","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,QAAM,CAACC,KAAD,EAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,KAA5B,EAAmCC,QAAnC,IAA+CP,YAAY,EAAjE;AAEAQ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,eAAe,GAAGL,SAAS,CAACM,MAAV,CAAkBC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBP,KAArB,CAA7B,CAAxB;AACAQ,IAAAA,QAAQ,CAACL,eAAD,CAAR;AACD,GAHQ,EAGN,CAACH,KAAD,EAAQF,SAAR,CAHM,CAAT;AAKA,QAAMW,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAEb,KADa;AAEnBc,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAE;AACZN,QAAAA,IAAI,EAAEN;AADM,OADP;AAIPa,MAAAA,qBAAqB,EAAE,CACrB;AACEC,QAAAA,MADF;AAEEC,QAAAA,UAFF;AAGEC,QAAAA;AAHF,OADqB;AAJhB,KAFU;AAcnBjB,IAAAA,OAdmB;AAenBE,IAAAA;AAfmB,GAArB;AAkBA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAGQ,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QADH,CADF;AAKD,CA/BD;;AAiCAD,QAAQ,CAACsB,SAAT,GAAqB;AACnBrB,EAAAA,QAAQ,EAAEJ,SAAS,CAAC0B,IAAV,CAAeC;AADN,CAArB;AAIA,eAAexB,QAAf","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types';\nimport StarWarsPlanetsContext from './StarWarsPlanetsContext';\nimport useFetchData from '../hooks/useFetchData';\n\nconst Provider = ({ children }) => {\n  const [state, stateCopy, loading, input, setInput] = useFetchData();\n\n  useEffect(() => {\n    const filteredPlanets = stateCopy.filter((planet) => planet.name.includes(input));\n    setState(filteredPlanets);\n  }, [input, stateCopy]);\n\n  const contextValue = {\n    data: state,\n    filters: {\n      filterByName: {\n        name: input,\n      },\n      filterByNumericValues: [\n        {\n          column,\n          comparison,\n          value,\n        },\n      ],\n    },\n    loading,\n    setInput,\n  };\n\n  return (\n    <StarWarsPlanetsContext.Provider value={ contextValue }>\n      {children}\n    </StarWarsPlanetsContext.Provider>\n  );\n};\n\nProvider.propTypes = {\n  children: Proptypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}