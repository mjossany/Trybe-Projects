{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/components/DisplayScreen/Table/Table.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport Context from '../../../context/Context';\n\nconst Table = () => {\n  const {\n    data,\n    filters: {\n      filterByName: {},\n      filterByNumericValue\n    },\n    loading\n  } = useContext(Context);\n  const [dataToBeUsed, setDataToBeUsed] = useState([]);\n  useEffect(() => {\n    const filterByName = planets => {\n      if (planets.length > 0) {\n        const filteredPlanets = planets.filter(planet => planet.name.includes(name));\n        setDataToBeUsed(filteredPlanets);\n      }\n\n      setDataToBeUsed(planets);\n    };\n\n    filterByName(data);\n  }, [data, name]);\n  if (loading || dataToBeUsed.length === 0) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 52\n    }\n  }, \"Loading...\");\n  const keysWithoutResidents = Object.keys(dataToBeUsed[0]).filter(key => key !== 'residents');\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, keysWithoutResidents.map(key => /*#__PURE__*/React.createElement(\"th\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 46\n    }\n  }, key)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, dataToBeUsed.map(planet => /*#__PURE__*/React.createElement(\"tr\", {\n    key: planet.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, keysWithoutResidents.map(key => /*#__PURE__*/React.createElement(\"td\", {\n    key: planet[key],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, planet[key]))))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/components/DisplayScreen/Table/Table.jsx"],"names":["React","useContext","useEffect","useState","Context","Table","data","filters","filterByName","filterByNumericValue","loading","dataToBeUsed","setDataToBeUsed","planets","length","filteredPlanets","filter","planet","name","includes","keysWithoutResidents","Object","keys","key","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAE,EADP;AAEPC,MAAAA;AAFO,KAFL;AAMJC,IAAAA;AANI,MAOFT,UAAU,CAACG,OAAD,CAPd;AASA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,YAAY,GAAIK,OAAD,IAAa;AAChC,UAAIA,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAwB;AACtB,cAAMC,eAAe,GAAGF,OAAO,CAACG,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAArB,CAA3B,CAAxB;AACAN,QAAAA,eAAe,CAACG,eAAD,CAAf;AACD;;AACDH,MAAAA,eAAe,CAACC,OAAD,CAAf;AACD,KAND;;AAOAL,IAAAA,YAAY,CAACF,IAAD,CAAZ;AACD,GATQ,EASN,CAACA,IAAD,EAAOY,IAAP,CATM,CAAT;AAWA,MAAIR,OAAO,IAAIC,YAAY,CAACG,MAAb,KAAwB,CAAvC,EAA0C,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAC1C,QAAMM,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYX,YAAY,CAAC,CAAD,CAAxB,EAA6BK,MAA7B,CAAqCO,GAAD,IAASA,GAAG,KAAK,WAArD,CAA7B;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,oBAAoB,CAACI,GAArB,CAA0BD,GAAD,iBAAS;AAAI,IAAA,GAAG,EAAGA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,GAAlB,CAAlC,CADH,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,YAAY,CACVa,GADF,CACOP,MAAD,iBACH;AAAI,IAAA,GAAG,EAAGA,MAAM,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,oBAAoB,CAACI,GAArB,CAA0BD,GAAD,iBACxB;AAAI,IAAA,GAAG,EAAGN,MAAM,CAACM,GAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,CAACM,GAAD,CADT,CADD,CADH,CAFH,CADH,CANF,CADF;AAqBD,CA/CD;;AAiDA,eAAelB,KAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Context from '../../../context/Context';\n\nconst Table = () => {\n  const {\n    data,\n    filters: {\n      filterByName: { },\n      filterByNumericValue,\n    },\n    loading,\n  } = useContext(Context);\n\n  const [dataToBeUsed, setDataToBeUsed] = useState([]);\n\n  useEffect(() => {\n    const filterByName = (planets) => {\n      if (planets.length > 0) {\n        const filteredPlanets = planets.filter((planet) => planet.name.includes(name));\n        setDataToBeUsed(filteredPlanets);\n      }\n      setDataToBeUsed(planets);\n    };\n    filterByName(data);\n  }, [data, name]);\n\n  if (loading || dataToBeUsed.length === 0) return <h2>Loading...</h2>;\n  const keysWithoutResidents = Object.keys(dataToBeUsed[0]).filter((key) => key !== 'residents');\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {keysWithoutResidents.map((key) => <th key={ key }>{ key }</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {dataToBeUsed\n          .map((planet) => (\n            <tr key={ planet.name }>\n              {keysWithoutResidents.map((key) => (\n                <td key={ planet[key] }>\n                  {planet[key]}\n                </td>\n              ))}\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}