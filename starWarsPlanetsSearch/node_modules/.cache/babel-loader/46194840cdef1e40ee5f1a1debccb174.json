{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/context/Provider.jsx\";\nimport React from 'react';\nimport Proptypes from 'prop-types';\nimport StarWarsPlanetsContext from './StarWarsPlanetsContext';\nimport useFetchData from '../hooks/useFetchData';\n\nconst Provider = ({\n  children\n}) => {\n  const [state, loading, input, setInput] = useFetchData();\n  const contextValue = {\n    data: state,\n    filters: {\n      filterByName: {\n        name: input\n      }\n    },\n    loading,\n    setInput\n  };\n  return /*#__PURE__*/React.createElement(StarWarsPlanetsContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nProvider.propTypes = {\n  children: Proptypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/context/Provider.jsx"],"names":["React","Proptypes","StarWarsPlanetsContext","useFetchData","Provider","children","state","loading","input","setInput","contextValue","data","filters","filterByName","name","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,QAAM,CAACC,KAAD,EAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,QAAxB,IAAoCN,YAAY,EAAtD;AAEA,QAAMO,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAEL,KADa;AAEnBM,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAE;AACZC,QAAAA,IAAI,EAAEN;AADM;AADP,KAFU;AAOnBD,IAAAA,OAPmB;AAQnBE,IAAAA;AARmB,GAArB;AAWA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAGC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKD,CAnBD;;AAqBAD,QAAQ,CAACW,SAAT,GAAqB;AACnBV,EAAAA,QAAQ,EAAEJ,SAAS,CAACe,IAAV,CAAeC;AADN,CAArB;AAIA,eAAeb,QAAf","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types';\nimport StarWarsPlanetsContext from './StarWarsPlanetsContext';\nimport useFetchData from '../hooks/useFetchData';\n\nconst Provider = ({ children }) => {\n  const [state, loading, input, setInput] = useFetchData();\n\n  const contextValue = {\n    data: state,\n    filters: {\n      filterByName: {\n        name: input,\n      },\n    },\n    loading,\n    setInput,\n  };\n\n  return (\n    <StarWarsPlanetsContext.Provider value={ contextValue }>\n      {children}\n    </StarWarsPlanetsContext.Provider>\n  );\n};\n\nProvider.propTypes = {\n  children: Proptypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}