{"ast":null,"code":"import { useEffect, useState } from 'react';\n\nconst useFetchData = () => {\n  const [state, setState] = useState([]);\n  const [stateCopy, setStateCopy] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(0);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    const getPlanets = async () => {\n      const endPoint = 'https://swapi-trybe.herokuapp.com/api/planets/';\n      const result = await fetch(endPoint);\n      const resultJson = await result.json();\n      const {\n        results\n      } = resultJson;\n      setState(results);\n      setStateCopy(results);\n      setLoading(false);\n    };\n\n    getPlanets();\n  }, []);\n  useEffect(() => {\n    const filteredPlanets = stateCopy.filter(planet => planet.name.includes(input));\n    setState(filteredPlanets);\n  }, [input, stateCopy]);\n  return [state, loading, input, setInput, column, setColumn, comparison, setComparison, value, setValue, setState, stateCopy];\n};\n\nexport default useFetchData;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/hooks/useFetchData.jsx"],"names":["useEffect","useState","useFetchData","state","setState","stateCopy","setStateCopy","loading","setLoading","column","setColumn","comparison","setComparison","value","setValue","input","setInput","getPlanets","endPoint","result","fetch","resultJson","json","results","filteredPlanets","filter","planet","name","includes"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,gDAAjB;AACA,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA1B;AACA,YAAMG,UAAU,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAzB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAcF,UAApB;AACAjB,MAAAA,QAAQ,CAACmB,OAAD,CAAR;AACAjB,MAAAA,YAAY,CAACiB,OAAD,CAAZ;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARD;;AAUAS,IAAAA,UAAU;AACX,GAZQ,EAYN,EAZM,CAAT;AAcAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,eAAe,GAAGnB,SAAS,CAACoB,MAAV,CAAkBC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBb,KAArB,CAA7B,CAAxB;AACAX,IAAAA,QAAQ,CAACoB,eAAD,CAAR;AACD,GAHQ,EAGN,CAACT,KAAD,EAAQV,SAAR,CAHM,CAAT;AAKA,SAAO,CACLF,KADK,EACEI,OADF,EACWQ,KADX,EACkBC,QADlB,EAELP,MAFK,EAEGC,SAFH,EAEcC,UAFd,EAE0BC,aAF1B,EAEyCC,KAFzC,EAEgDC,QAFhD,EAE0DV,QAF1D,EAEoEC,SAFpE,CAAP;AAID,CAhCD;;AAkCA,eAAeH,YAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useFetchData = () => {\n  const [state, setState] = useState([]);\n  const [stateCopy, setStateCopy] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(0);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    const getPlanets = async () => {\n      const endPoint = 'https://swapi-trybe.herokuapp.com/api/planets/';\n      const result = await fetch(endPoint);\n      const resultJson = await result.json();\n      const { results } = resultJson;\n      setState(results);\n      setStateCopy(results);\n      setLoading(false);\n    };\n\n    getPlanets();\n  }, []);\n\n  useEffect(() => {\n    const filteredPlanets = stateCopy.filter((planet) => planet.name.includes(input));\n    setState(filteredPlanets);\n  }, [input, stateCopy]);\n\n  return [\n    state, loading, input, setInput,\n    column, setColumn, comparison, setComparison, value, setValue, setState, stateCopy,\n  ];\n};\n\nexport default useFetchData;\n"]},"metadata":{},"sourceType":"module"}