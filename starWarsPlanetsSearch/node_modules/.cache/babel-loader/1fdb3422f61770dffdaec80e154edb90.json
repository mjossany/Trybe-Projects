{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/components/DisplayScreen/Table/Table.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport Context from '../../../context/Context';\nimport switchComparison from '../../../functions/switchComparison';\n\nconst Table = () => {\n  const {\n    data,\n    filters: {\n      filterByName: {\n        name\n      },\n      filterByNumericValue\n    }\n  } = useContext(Context);\n  const [dataToBeUsed, setDataToBeUsed] = useState([]);\n\n  const filterByName = planets => {\n    if (planets.length > 0) {\n      return planets.filter(planet => planet.name.includes(name));\n    }\n\n    return planets;\n  };\n\n  const filterByValue = planets => {\n    const filteredData = planets;\n\n    if (filterByNumericValue.length > 0) {\n      filterByNumericValue.forEach(({\n        column,\n        comparison,\n        value\n      }) => {\n        planets = filteredData.filter(planet => switchComparison(planet, column, comparison, value));\n      });\n      return filteredData;\n    }\n\n    return planets;\n  };\n\n  const applyFilters = () => setDataToBeUsed(filterByValue(filterByName(data)));\n\n  useEffect(applyFilters, [data, name, filterByNumericValue]);\n  if (dataToBeUsed.length === 0) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, \"Loading...\");\n  const keysWithoutResidents = Object.keys(dataToBeUsed[0]).filter(key => key !== 'residents');\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, keysWithoutResidents.map(key => /*#__PURE__*/React.createElement(\"th\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 46\n    }\n  }, key)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, dataToBeUsed.map(planet => /*#__PURE__*/React.createElement(\"tr\", {\n    key: planet.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, keysWithoutResidents.map(key => /*#__PURE__*/React.createElement(\"td\", {\n    key: planet[key],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, planet[key]))))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/components/DisplayScreen/Table/Table.jsx"],"names":["React","useContext","useEffect","useState","Context","switchComparison","Table","data","filters","filterByName","name","filterByNumericValue","dataToBeUsed","setDataToBeUsed","planets","length","filter","planet","includes","filterByValue","filteredData","forEach","column","comparison","value","applyFilters","keysWithoutResidents","Object","keys","key","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAE;AAAEC,QAAAA;AAAF,OADP;AAEPC,MAAAA;AAFO;AAFL,MAMFV,UAAU,CAACG,OAAD,CANd;AAQA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMM,YAAY,GAAIK,OAAD,IAAa;AAChC,QAAIA,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAwB;AACtB,aAAOD,OAAO,CAACE,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACP,IAAP,CAAYQ,QAAZ,CAAqBR,IAArB,CAA3B,CAAP;AACD;;AACD,WAAOI,OAAP;AACD,GALD;;AAOA,QAAMK,aAAa,GAAIL,OAAD,IAAa;AACjC,UAAMM,YAAY,GAAGN,OAArB;;AACA,QAAIH,oBAAoB,CAACI,MAArB,GAA8B,CAAlC,EAAqC;AACnCJ,MAAAA,oBAAoB,CAACU,OAArB,CAA6B,CAAC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,UAAV;AAAsBC,QAAAA;AAAtB,OAAD,KAAmC;AAC9DV,QAAAA,OAAO,GAAGM,YAAY,CACnBJ,MADO,CACCC,MAAD,IAAYZ,gBAAgB,CAACY,MAAD,EAASK,MAAT,EAAiBC,UAAjB,EAA6BC,KAA7B,CAD5B,CAAV;AAED,OAHD;AAIA,aAAOJ,YAAP;AACD;;AACD,WAAON,OAAP;AACD,GAVD;;AAYA,QAAMW,YAAY,GAAG,MACnBZ,eAAe,CAACM,aAAa,CAACV,YAAY,CAACF,IAAD,CAAb,CAAd,CADjB;;AAIAL,EAAAA,SAAS,CACPuB,YADO,EAEP,CAAClB,IAAD,EAAOG,IAAP,EAAaC,oBAAb,CAFO,CAAT;AAKA,MAAIC,YAAY,CAACG,MAAb,KAAwB,CAA5B,EAA+B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAE/B,QAAMW,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYhB,YAAY,CAAC,CAAD,CAAxB,EAC1BI,MAD0B,CAClBa,GAAD,IAASA,GAAG,KAAK,WADE,CAA7B;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,oBAAoB,CAACI,GAArB,CAA0BD,GAAD,iBAAS;AAAI,IAAA,GAAG,EAAGA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,GAAlB,CAAlC,CADH,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,YAAY,CACVkB,GADF,CACOb,MAAD,iBACH;AAAI,IAAA,GAAG,EAAGA,MAAM,CAACP,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,oBAAoB,CAACI,GAArB,CAA0BD,GAAD,iBACxB;AAAI,IAAA,GAAG,EAAGZ,MAAM,CAACY,GAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,MAAM,CAACY,GAAD,CADT,CADD,CADH,CAFH,CADH,CANF,CADF;AAqBD,CAjED;;AAmEA,eAAevB,KAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Context from '../../../context/Context';\nimport switchComparison from '../../../functions/switchComparison';\n\nconst Table = () => {\n  const {\n    data,\n    filters: {\n      filterByName: { name },\n      filterByNumericValue,\n    },\n  } = useContext(Context);\n\n  const [dataToBeUsed, setDataToBeUsed] = useState([]);\n\n  const filterByName = (planets) => {\n    if (planets.length > 0) {\n      return planets.filter((planet) => planet.name.includes(name));\n    }\n    return planets;\n  };\n\n  const filterByValue = (planets) => {\n    const filteredData = planets;\n    if (filterByNumericValue.length > 0) {\n      filterByNumericValue.forEach(({ column, comparison, value }) => {\n        planets = filteredData\n          .filter((planet) => switchComparison(planet, column, comparison, value));\n      });\n      return filteredData;\n    }\n    return planets;\n  };\n\n  const applyFilters = () => (\n    setDataToBeUsed(filterByValue(filterByName(data)))\n  );\n\n  useEffect(\n    applyFilters,\n    [data, name, filterByNumericValue],\n  );\n\n  if (dataToBeUsed.length === 0) return <h2>Loading...</h2>;\n\n  const keysWithoutResidents = Object.keys(dataToBeUsed[0])\n    .filter((key) => key !== 'residents');\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {keysWithoutResidents.map((key) => <th key={ key }>{ key }</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {dataToBeUsed\n          .map((planet) => (\n            <tr key={ planet.name }>\n              {keysWithoutResidents.map((key) => (\n                <td key={ planet[key] }>\n                  {planet[key]}\n                </td>\n              ))}\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}