{"ast":null,"code":"var _jsxFileName = \"/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/components/DisplayScreen/Table/Table.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport Context from '../../../context/Context';\n\nconst Table = () => {\n  const {\n    data,\n    filters: {\n      filterByName: {\n        input\n      },\n      filterByNumericValue\n    },\n    loading\n  } = useContext(Context);\n  if (loading || data.length === 0) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 44\n    }\n  }, \"Loading...\");\n  const keysWithoutResidents = Object.keys(data[0]).filter(key => key !== 'residents');\n  useEffect(() => {\n    const filteredPlanets = stateCopy.filter(planet => planet.name.includes(input));\n    setState(filteredPlanets);\n  }, [input, stateCopy]);\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, keysWithoutResidents.map(key => /*#__PURE__*/React.createElement(\"th\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 46\n    }\n  }, key)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, data.map(planet => /*#__PURE__*/React.createElement(\"tr\", {\n    key: planet.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, keysWithoutResidents.map(key => /*#__PURE__*/React.createElement(\"td\", {\n    key: planet[key],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, planet[key]))))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/jossanymoura/Dev/projetos/starWarsPlanetsSearch/sd-012-project-starwars-planets-search/src/components/DisplayScreen/Table/Table.jsx"],"names":["React","useContext","useEffect","Context","Table","data","filters","filterByName","input","filterByNumericValue","loading","length","keysWithoutResidents","Object","keys","filter","key","filteredPlanets","stateCopy","planet","name","includes","setState","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAE;AAAEC,QAAAA;AAAF,OADP;AAEPC,MAAAA;AAFO,KAFL;AAMJC,IAAAA;AANI,MAOFT,UAAU,CAACE,OAAD,CAPd;AASA,MAAIO,OAAO,IAAIL,IAAI,CAACM,MAAL,KAAgB,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAClC,QAAMC,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYT,IAAI,CAAC,CAAD,CAAhB,EAAqBU,MAArB,CAA6BC,GAAD,IAASA,GAAG,KAAK,WAA7C,CAA7B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,eAAe,GAAGC,SAAS,CAACH,MAAV,CAAkBI,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBb,KAArB,CAA7B,CAAxB;AACAc,IAAAA,QAAQ,CAACL,eAAD,CAAR;AACD,GAHQ,EAGN,CAACT,KAAD,EAAQU,SAAR,CAHM,CAAT;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,oBAAoB,CAACW,GAArB,CAA0BP,GAAD,iBAAS;AAAI,IAAA,GAAG,EAAGA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,GAAlB,CAAlC,CADH,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,IAAI,CACFkB,GADF,CACOJ,MAAD,iBACH;AAAI,IAAA,GAAG,EAAGA,MAAM,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,oBAAoB,CAACW,GAArB,CAA0BP,GAAD,iBACxB;AAAI,IAAA,GAAG,EAAGG,MAAM,CAACH,GAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,CAACH,GAAD,CADT,CADD,CADH,CAFH,CADH,CANF,CADF;AAqBD,CAvCD;;AAyCA,eAAeZ,KAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport Context from '../../../context/Context';\n\nconst Table = () => {\n  const {\n    data,\n    filters: {\n      filterByName: { input },\n      filterByNumericValue,\n    },\n    loading,\n  } = useContext(Context);\n\n  if (loading || data.length === 0) return <h2>Loading...</h2>;\n  const keysWithoutResidents = Object.keys(data[0]).filter((key) => key !== 'residents');\n\n  useEffect(() => {\n    const filteredPlanets = stateCopy.filter((planet) => planet.name.includes(input));\n    setState(filteredPlanets);\n  }, [input, stateCopy]);\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {keysWithoutResidents.map((key) => <th key={ key }>{ key }</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {data\n          .map((planet) => (\n            <tr key={ planet.name }>\n              {keysWithoutResidents.map((key) => (\n                <td key={ planet[key] }>\n                  {planet[key]}\n                </td>\n              ))}\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}